{"meta":{"title":"林伟源的技术博客","subtitle":"1 1 2","description":"222 dss 的","author":"林伟源","url":"https://linweiyuan.github.io","root":"/"},"pages":[{"title":"关于","date":"2022-09-23T15:32:42.164Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"about/index.html","permalink":"https://linweiyuan.github.io/about/index.html","excerpt":"","text":"邮箱：root@linweiyuan.com"},{"title":"分类","date":"2022-09-23T15:32:42.164Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"categories/index.html","permalink":"https://linweiyuan.github.io/categories/index.html","excerpt":"","text":""},{"title":"友链","date":"2022-09-23T15:32:42.164Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"links/index.html","permalink":"https://linweiyuan.github.io/links/index.html","excerpt":"","text":""},{"title":"项目","date":"2022-09-23T15:32:42.164Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"repository/index.html","permalink":"https://linweiyuan.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-09-23T15:32:42.164Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"tags/index.html","permalink":"https://linweiyuan.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Docker 常用服务","slug":"Docker-常用服务","date":"2022-07-27T02:42:48.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2022/07/27/Docker-常用服务.html","link":"","permalink":"https://linweiyuan.github.io/2022/07/27/Docker-%E5%B8%B8%E7%94%A8%E6%9C%8D%E5%8A%A1.html","excerpt":"","text":"整理了下常用的 Docker 服务： https://github.com/linweiyuan/docker-services","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"}]},{"title":"Docker 使用国内镜像源时遇到的坑","slug":"Docker-使用国内镜像源时遇到的坑","date":"2022-07-25T10:50:47.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2022/07/25/Docker-使用国内镜像源时遇到的坑.html","link":"","permalink":"https://linweiyuan.github.io/2022/07/25/Docker-%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91.html","excerpt":"","text":"详见：https://github.com/ustclug/discussions/issues/396 “故从 2020 年 4 月起，从科大校外对 Docker Hub 镜像缓存的访问会被 302 重定向至其他国内 Docker Hub 镜像源” 可以看到是重定向到阿里云 https://docker.mirrors.ustc.edu.cn -&gt; https://ustc-edu-cn.mirror.aliyuncs.com 但是校外访问这个仓库已经是旧的了 替代品 直连 阿里云（广州或杭州，或自己账号）：https://registry.cn-guangzhou.aliyuncs.com 网易（容易连着连着自动断开）：https://hub-mirror.c.163.com","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"}]},{"title":"Kotlin动态代理","slug":"Kotlin动态代理","date":"2020-08-28T03:59:12.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2020/08/28/Kotlin动态代理.html","link":"","permalink":"https://linweiyuan.github.io/2020/08/28/Kotlin%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86.html","excerpt":"","text":"1method!!.invoke(obj, *(args ?: emptyArray())) 相比之下Java的方式 1method.invoke(obj, args);","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Kotlin","slug":"Kotlin","permalink":"https://linweiyuan.github.io/tags/Kotlin/"}]},{"title":"微信开发的坑","slug":"微信开发的坑","date":"2020-04-27T16:12:13.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2020/04/27/微信开发的坑.html","link":"","permalink":"https://linweiyuan.github.io/2020/04/27/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E7%9A%84%E5%9D%91.html","excerpt":"","text":"参数部分xml, 部分json 接口校验首次校验接口SHA-1参数值字典序, 其他接口MD5参数值key, value字典序 微信支付企业付款: 参数mch_appid, mchid, 旁边签名算法链接的示例整个appid, mch_id支付验收指引 就是sandbox 参数又变成mch_id 不能输入随意金额","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Kotlin","slug":"Kotlin","permalink":"https://linweiyuan.github.io/tags/Kotlin/"},{"name":"WeChatPay","slug":"WeChatPay","permalink":"https://linweiyuan.github.io/tags/WeChatPay/"}]},{"title":"某站程序和文件上传漏洞","slug":"某站程序和文件上传漏洞","date":"2020-01-25T14:44:43.000Z","updated":"2022-09-23T15:32:42.160Z","comments":true,"path":"2020/01/25/某站程序和文件上传漏洞.html","link":"","permalink":"https://linweiyuan.github.io/2020/01/25/%E6%9F%90%E7%AB%99%E7%A8%8B%E5%BA%8F%E5%92%8C%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E.html","excerpt":"","text":"利用程序漏洞成功以 admin 身份登录后台, 数据泄露 任意文件类型上传, jspx 小 shell Windows 操作系统 数据库配置泄露","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://linweiyuan.github.io/tags/Windows/"},{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"JSPX","slug":"JSPX","permalink":"https://linweiyuan.github.io/tags/JSPX/"}]},{"title":"Anko放弃维护","slug":"Anko放弃维护","date":"2019-12-02T21:13:54.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2019/12/02/Anko放弃维护.html","link":"","permalink":"https://linweiyuan.github.io/2019/12/02/Anko%E6%94%BE%E5%BC%83%E7%BB%B4%E6%8A%A4.html","excerpt":"","text":"用Anko写过一个Android应用 -&gt; 怪物猎人金手指 for Android, 最喜欢的就是doAsync和uiThread, 今天升级下依赖, 发现提示Anko is deprecated, 并且给出了一个说明 -&gt; Discontinuing Anko 截止目前15.4k的Star, 这个项目确实很好, 真是令人惋惜 希望Ktor能持续发展","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Kotlin","slug":"Kotlin","permalink":"https://linweiyuan.github.io/tags/Kotlin/"},{"name":"Anko","slug":"Anko","permalink":"https://linweiyuan.github.io/tags/Anko/"}]},{"title":"某站XSS漏洞","slug":"某站XSS漏洞","date":"2019-11-11T15:28:35.000Z","updated":"2022-09-23T15:32:42.156Z","comments":true,"path":"2019/11/11/某站XSS漏洞.html","link":"","permalink":"https://linweiyuan.github.io/2019/11/11/%E6%9F%90%E7%AB%99XSS%E6%BC%8F%E6%B4%9E.html","excerpt":"","text":"插入任意 JS 脚本 JS 脚本加载","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"XSS","slug":"XSS","permalink":"https://linweiyuan.github.io/tags/XSS/"},{"name":"JSPX","slug":"JSPX","permalink":"https://linweiyuan.github.io/tags/JSPX/"}]},{"title":"PyPI加速","slug":"PyPI加速","date":"2019-10-06T09:47:06.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/10/06/PyPI加速.html","link":"","permalink":"https://linweiyuan.github.io/2019/10/06/PyPI%E5%8A%A0%E9%80%9F.html","excerpt":"","text":"12[global]index-url = https://mirrors.tuna.tsinghua.edu.cn/pypi/simple","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://linweiyuan.github.io/tags/Python/"},{"name":"pip","slug":"pip","permalink":"https://linweiyuan.github.io/tags/pip/"}]},{"title":"VirtualBox压缩虚拟硬盘","slug":"VirtualBox压缩虚拟硬盘","date":"2019-08-06T22:16:22.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/08/06/VirtualBox压缩虚拟硬盘.html","link":"","permalink":"https://linweiyuan.github.io/2019/08/06/VirtualBox%E5%8E%8B%E7%BC%A9%E8%99%9A%E6%8B%9F%E7%A1%AC%E7%9B%98.html","excerpt":"","text":"Linux12sudo dd if=/dev/zero of=/empty bs=1Msudo rm -f /empty Windows下载 -&gt; Sysinternals Suite 1sdelete –z C: 关机执行 1vboxmanage modifyhd xxx.vdi --compact 提示 10%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%","categories":[{"name":"虚拟机","slug":"虚拟机","permalink":"https://linweiyuan.github.io/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"}],"tags":[{"name":"VirtualBox","slug":"VirtualBox","permalink":"https://linweiyuan.github.io/tags/VirtualBox/"}]},{"title":"Android License","slug":"Android-License","date":"2019-07-26T22:39:22.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2019/07/26/Android-License.html","link":"","permalink":"https://linweiyuan.github.io/2019/07/26/Android-License.html","excerpt":"","text":"Android 开发中提示License for package xxx not accepted. 1yes | sdkmanager --licenses","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://linweiyuan.github.io/tags/Android/"}]},{"title":"减少MySQL内存占用","slug":"减少MySQL内存占用","date":"2019-07-21T18:07:49.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/07/21/减少MySQL内存占用.html","link":"","permalink":"https://linweiyuan.github.io/2019/07/21/%E5%87%8F%E5%B0%91MySQL%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8.html","excerpt":"","text":"MySQL 高版本默认开启performance_schema -&gt; Performance Schema Startup Configuration 用 Docker 启动一个 MySQL 容器, 开启的情况下启动完成占用内存接近 400M 关闭配置 12[mysqld]performance_schema=OFF 重启 MySQL 占用内存 100M 左右","categories":[{"name":"数据库","slug":"数据库","permalink":"https://linweiyuan.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://linweiyuan.github.io/tags/MySQL/"}]},{"title":"i3status显示网速","slug":"i3status显示网速","date":"2019-07-20T13:23:24.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/07/20/i3status显示网速.html","link":"","permalink":"https://linweiyuan.github.io/2019/07/20/i3status%E6%98%BE%E7%A4%BA%E7%BD%91%E9%80%9F.html","excerpt":"","text":"下载脚本 -&gt; net-speed.sh, 修改bar执行程序路径指向脚本 123bar &#123; status_command exec net-speed.sh&#125; 修改成好看的格式 1echo &quot;$&#123;rate&#125;| $&#123;line&#125;&quot; || exit 1 重新加载 i3 配置文件","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"},{"name":"i3","slug":"i3","permalink":"https://linweiyuan.github.io/tags/i3/"},{"name":"i3status","slug":"i3status","permalink":"https://linweiyuan.github.io/tags/i3status/"}]},{"title":"Linux和Windows共享硬盘挂载问题解决方案","slug":"Linux和Windows共享硬盘挂载问题解决方案","date":"2019-07-02T20:25:01.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/07/02/Linux和Windows共享硬盘挂载问题解决方案.html","link":"","permalink":"https://linweiyuan.github.io/2019/07/02/Linux%E5%92%8CWindows%E5%85%B1%E4%BA%AB%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","excerpt":"","text":"双系统 Linux + Windows 10, Windows 下有 NTFS 格式 1T 硬盘(比如 D 盘), Linux 下按需挂载时出现问题 1sudo mount /dev/sdb1 Temp 报错 12345The disk contains an unclean file system (0, 0).Metadata kept in Windows cache, refused to mount.Falling back to read-only mount because the NTFS partition is in anunsafe state. Please resume and shutdown Windows fully (no hibernationor fast restarting.) 利用ntfsfix命令解决 1sudo ntfsfix /dev/sdb1 修复脏数据 1234567891011121314Mounting volume... The disk contains an unclean file system (0, 0).Metadata kept in Windows cache, refused to mount.FAILEDAttempting to correct errors...Processing $MFT and $MFTMirr...Reading $MFT... OKReading $MFTMirr... OKComparing $MFTMirr to $MFT... OKProcessing of $MFT and $MFTMirr completed successfully.Setting required flags on partition... OKGoing to empty the journal ($LogFile)... OKChecking the alternate boot sector... OKNTFS volume version is 3.1.NTFS partition /dev/sdb1 was processed successfully. 以读写方式重新加载 1sudo mount -o rw /dev/sdb1","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"NTFS","slug":"NTFS","permalink":"https://linweiyuan.github.io/tags/NTFS/"},{"name":"Windows","slug":"Windows","permalink":"https://linweiyuan.github.io/tags/Windows/"}]},{"title":"某站越权漏洞","slug":"某站越权漏洞","date":"2019-06-07T14:34:55.000Z","updated":"2022-09-23T15:32:42.160Z","comments":true,"path":"2019/06/07/某站越权漏洞.html","link":"","permalink":"https://linweiyuan.github.io/2019/06/07/%E6%9F%90%E7%AB%99%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E.html","excerpt":"","text":"普通用户登录 利用普通用户身份重置 admin 密码 admin 登录 数据泄露","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"Unauthorized","slug":"Unauthorized","permalink":"https://linweiyuan.github.io/tags/Unauthorized/"}]},{"title":"Javassist动态增强类","slug":"Javassist动态增强类","date":"2019-06-06T00:07:35.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/06/06/Javassist动态增强类.html","link":"","permalink":"https://linweiyuan.github.io/2019/06/06/Javassist%E5%8A%A8%E6%80%81%E5%A2%9E%E5%BC%BA%E7%B1%BB.html","excerpt":"","text":"User类，只有一个字段username，在不继承或者其他方式前提下利用Javassist实现类增强 可以看到.class文件已被修改 重新加载字节码后发现password设为private没输出，username值被修改，flag设为public被输出，getter也被输出","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"},{"name":"后端","slug":"程序设计/后端","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E5%90%8E%E7%AB%AF/"},{"name":"Java","slug":"程序设计/后端/Java","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E5%90%8E%E7%AB%AF/Java/"},{"name":"Javassist","slug":"程序设计/后端/Java/Javassist","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E5%90%8E%E7%AB%AF/Java/Javassist/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://linweiyuan.github.io/tags/Java/"},{"name":"Javassist","slug":"Javassist","permalink":"https://linweiyuan.github.io/tags/Javassist/"},{"name":"Reflection","slug":"Reflection","permalink":"https://linweiyuan.github.io/tags/Reflection/"}]},{"title":"Maven上传Nexus私服带源码","slug":"Maven上传Nexus私服带源码","date":"2019-06-03T16:26:59.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/06/03/Maven上传Nexus私服带源码.html","link":"","permalink":"https://linweiyuan.github.io/2019/06/03/Maven%E4%B8%8A%E4%BC%A0Nexus%E7%A7%81%E6%9C%8D%E5%B8%A6%E6%BA%90%E7%A0%81.html","excerpt":"","text":"加maven-source-plugin插件 123456789101112131415&lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;attach&gt;true&lt;/attach&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;phase&gt;compile&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;jar&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt;&lt;/plugin&gt; settings.xml配置验证信息 123456789&lt;settings&gt; &lt;servers&gt; &lt;server&gt; &lt;id&gt;id&lt;/id&gt; &lt;username&gt;username&lt;/username&gt; &lt;password&gt;password&lt;/password&gt; &lt;/server&gt; &lt;/servers&gt;&lt;/settings&gt; pom.xml中的id要和settings.xml中的一致 123456&lt;distributionManagement&gt; &lt;repository&gt; &lt;id&gt;id&lt;/id&gt; &lt;url&gt;url&lt;/url&gt; &lt;/repository&gt;&lt;/distributionManagement&gt;","categories":[{"name":"构建工具","slug":"构建工具","permalink":"https://linweiyuan.github.io/categories/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Maven","slug":"Maven","permalink":"https://linweiyuan.github.io/tags/Maven/"},{"name":"Nexus","slug":"Nexus","permalink":"https://linweiyuan.github.io/tags/Nexus/"}]},{"title":"Java定时器","slug":"Java定时器","date":"2019-05-22T02:20:09.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/05/22/Java定时器.html","link":"","permalink":"https://linweiyuan.github.io/2019/05/22/Java%E5%AE%9A%E6%97%B6%E5%99%A8.html","excerpt":"","text":"简单起见用Kotlin写 scheduleAtFixedRate12345678910val timerTaskPool = Executors.newScheduledThreadPool(2)timerTaskPool.scheduleAtFixedRate( object : TimerTask() &#123; override fun run() &#123; println(Date()) Thread.sleep(2000) &#125; &#125;, 0, 3, TimeUnit.SECONDS) 运行结果 123Wed May 22 02:24:52 CST 2019Wed May 22 02:24:55 CST 2019Wed May 22 02:24:58 CST 2019 也就是不顾前面的任务有没执行完, 延迟指定时间就再次执行任务 scheduleWithFixedDelay12345678910val timerTaskPool = Executors.newScheduledThreadPool(2)timerTaskPool.scheduleWithFixedDelay( object : TimerTask() &#123; override fun run() &#123; println(Date()) Thread.sleep(2000) &#125; &#125;, 0, 3, TimeUnit.SECONDS) 运行结果 123Wed May 22 02:26:04 CST 2019Wed May 22 02:26:09 CST 2019Wed May 22 02:26:14 CST 2019 延迟 3 秒, 睡了 2 秒, 间隔 5 秒 定时任务尽量用 Pool, 因为 Timer 在分布式系统上可能存在时间不一致或者无法捕获异常的问题","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Kotlin","slug":"Kotlin","permalink":"https://linweiyuan.github.io/tags/Kotlin/"},{"name":"Java","slug":"Java","permalink":"https://linweiyuan.github.io/tags/Java/"},{"name":"ThreadPool","slug":"ThreadPool","permalink":"https://linweiyuan.github.io/tags/ThreadPool/"}]},{"title":"Flask Dockerfile模板","slug":"Flask-Dockerfile模板","date":"2019-05-20T20:20:48.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/05/20/Flask-Dockerfile模板.html","link":"","permalink":"https://linweiyuan.github.io/2019/05/20/Flask-Dockerfile%E6%A8%A1%E6%9D%BF.html","excerpt":"","text":"python:alpine基于 Python3, 依赖下载过程中需要 build, 安装python3-dev,build-base,gcc, build 完后删掉, 镜像可减少几百 M 123456789101112131415161718FROM python:alpineLABEL maintainer=&quot;linweiyuan &lt;root@linweiyuan.com&gt;&quot;ENV FOLDER 项目名字COPY . $&#123;FOLDER&#125;WORKDIR $&#123;FOLDER&#125;RUN sed -i &#x27;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&#x27; /etc/apk/repositories \\ &amp;&amp; apk add --no-cache python3-dev build-base gcc \\ &amp;&amp; pip install --no-cache-dir -r requirements.txt \\ &amp;&amp; apk del python3-dev build-base gccEXPOSE 5000CMD [&quot;flask&quot;,&quot;run&quot;,&quot;--host=0.0.0.0&quot;]","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://linweiyuan.github.io/tags/Python/"},{"name":"Flask","slug":"Flask","permalink":"https://linweiyuan.github.io/tags/Flask/"},{"name":"Dockerfile","slug":"Dockerfile","permalink":"https://linweiyuan.github.io/tags/Dockerfile/"}]},{"title":"Go日期格式化","slug":"Go日期格式化","date":"2019-05-20T00:24:52.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/05/20/Go日期格式化.html","link":"","permalink":"https://linweiyuan.github.io/2019/05/20/Go%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96.html","excerpt":"","text":"文档 -&gt; time - The Go Programming Language 1time.Now().Format(&quot;2006-01-02 15:04:05&quot;) 真是一股清流","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Go","slug":"Go","permalink":"https://linweiyuan.github.io/tags/Go/"}]},{"title":"Go交叉编译","slug":"Go交叉编译","date":"2019-05-19T23:33:25.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/05/19/Go交叉编译.html","link":"","permalink":"https://linweiyuan.github.io/2019/05/19/Go%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91.html","excerpt":"","text":"Linux1CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go Windows1CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go macOS1CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build main.go 其他选项 $GOOS $GOARCH android arm darwin 386 darwin amd64 darwin arm darwin arm64 dragonfly amd64 freebsd 386 freebsd amd64 freebsd arm linux 386 linux amd64 linux arm linux arm64 linux ppc64 linux ppc64le linux mips linux mipsle linux mips64 linux mips64le linux s390x netbsd 386 netbsd amd64 netbsd arm openbsd 386 openbsd amd64 openbsd arm plan9 386 plan9 amd64 solaris amd64 windows 386 windows amd64","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Go","slug":"Go","permalink":"https://linweiyuan.github.io/tags/Go/"}]},{"title":"pem to key","slug":"pem-to-key","date":"2019-05-12T14:39:55.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/05/12/pem-to-key.html","link":"","permalink":"https://linweiyuan.github.io/2019/05/12/pem-to-key.html","excerpt":"","text":"12openssl x509 -in fullchain1.pem -out server.crtopenssl rsa -in privkey1.pem -out server.key","categories":[{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"openssl","slug":"openssl","permalink":"https://linweiyuan.github.io/tags/openssl/"}]},{"title":"Linux维护","slug":"Linux维护","date":"2019-05-07T04:59:11.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/05/07/Linux维护.html","link":"","permalink":"https://linweiyuan.github.io/2019/05/07/Linux%E7%BB%B4%E6%8A%A4.html","excerpt":"","text":"启动 1single init=/bin/bash 改密码提示Authentication Token Manipulation Error 1mount -rw -o remount /","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"}]},{"title":"删除Docker无用镜像","slug":"删除Docker无用镜像","date":"2019-05-05T12:39:04.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/05/05/删除Docker无用镜像.html","link":"","permalink":"https://linweiyuan.github.io/2019/05/05/%E5%88%A0%E9%99%A4Docker%E6%97%A0%E7%94%A8%E9%95%9C%E5%83%8F.html","excerpt":"","text":"一键删除 build 过程中产生的&lt;none&gt;镜像 1docker images -a | grep none | awk &#x27;&#123;print $3&#125;&#x27; | xargs docker rmi 或者 1docker rmi $(docker images -a | grep none | awk &#x27;&#123;print $3&#125;&#x27;)","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"}]},{"title":"Nginx配置SSE","slug":"Nginx配置SSE","date":"2019-04-26T10:37:42.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/04/26/Nginx配置SSE.html","link":"","permalink":"https://linweiyuan.github.io/2019/04/26/Nginx%E9%85%8D%E7%BD%AESSE.html","excerpt":"","text":"加个配置 1proxy_buffering off; 经测试, X-Accel-Buffering: no不好使 与 WebSocket 比较的话, SSE 只能服务器推, WS 全双工, 不过 SSE 更轻量","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://linweiyuan.github.io/tags/Nginx/"},{"name":"Server Send Event","slug":"Server-Send-Event","permalink":"https://linweiyuan.github.io/tags/Server-Send-Event/"}]},{"title":"Docker搭建私有仓库","slug":"Docker搭建私有仓库","date":"2019-04-25T21:28:57.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2019/04/25/Docker搭建私有仓库.html","link":"","permalink":"https://linweiyuan.github.io/2019/04/25/Docker%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93.html","excerpt":"","text":"起个容器 1234567891011registry: container_name: registry image: registry volumes: - ./registry:/var/lib/registry/docker/registry/v2 - ./registry/auth:/auth environment: - REGISTRY_AUTH=htpasswd - REGISTRY_AUTH_HTPASSWD_REALM=Auth - REGISTRY_AUTH_HTPASSWD_PATH=/auth restart: unless-stopped Auth 1htpasswd -Bb -c auth（文件名） 用户名 密码","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"},{"name":"Registry","slug":"Registry","permalink":"https://linweiyuan.github.io/tags/Registry/"}]},{"title":"Nginx文件浏览","slug":"Nginx文件浏览","date":"2019-04-21T02:23:01.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/04/21/Nginx文件浏览.html","link":"","permalink":"https://linweiyuan.github.io/2019/04/21/Nginx%E6%96%87%E4%BB%B6%E6%B5%8F%E8%A7%88.html","excerpt":"","text":"123autoindex on;autoindex_exact_size off;autoindex_localtime on; autoindex_exact_size -&gt; on显示字节, off显示人看的 autoindex_localtime -&gt; on显示服务器时间, off则 GMT 中文乱码加charset utf-8;","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://linweiyuan.github.io/tags/Nginx/"}]},{"title":"Nginx的Basic认证","slug":"Nginx的Basic认证","date":"2019-04-20T20:48:21.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/04/20/Nginx的Basic认证.html","link":"","permalink":"https://linweiyuan.github.io/2019/04/20/Nginx%E7%9A%84Basic%E8%AE%A4%E8%AF%81.html","excerpt":"","text":"参考 -&gt; Restricting Access with HTTP Basic Authentication 敏感服务不想对外暴露, 简单加个Basic Authentication AUR 是个好东西, htpasswd也有了, apache-tools还可以利用 ab 进行压力测试 1234567891011121314➜ ~ proxychains yaourt htpasswd[proxychains] config file found: /etc/proxychains.conf[proxychains] preloading /usr/lib/libproxychains4.so1 archlinuxcn/apache-tools 2.4.25-1 [installed] Useful Apache tools - htdigest, htpasswd, ab, htdbm2 aur/apache-tools 2.4.39-1 [installed: 2.4.25-1] (115) (1.01) Useful Apache tools - htdigest, htpasswd, ab, htdbm3 aur/python-htpasswd-git .r31.ef677a5-1 (0) (0.00) Python Library for working with htpasswd user (only basic authorization) and group files4 aur/python2-htpasswd-git .r31.ef677a5-1 (5) (0.05) Python 2 Library for working with htpasswd user (only basic authorization) and group files==&gt; Enter n° of packages to be installed (e.g., 1 2 3 or 1-3)==&gt; ---------------------------------------------------------==&gt; 生成密码 1htpasswd -c 文件名 用户名 挂载进 nginx 容器, 在需要的位置配置 12auth_basic &quot;Auth&quot;;auth_basic_user_file `认证文件路径`; 注意文件权限问题 curl 测试一下是否生效 123456789101112131415&lt; HTTP/1.1 401 Unauthorized&lt; Server: nginx/1.15.12&lt; Date: Sat, 20 Apr 2019 12:53:31 GMT&lt; Content-Type: text/html&lt; Content-Length: 180&lt; Connection: keep-alive&lt; WWW-Authenticate: Basic realm=&quot;Auth&quot;&lt;&lt;html&gt;&lt;head&gt;&lt;title&gt;401 Authorization Required&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;center&gt;&lt;h1&gt;401 Authorization Required&lt;/h1&gt;&lt;/center&gt;&lt;hr&gt;&lt;center&gt;nginx/1.15.12&lt;/center&gt;&lt;/body&gt;&lt;/html&gt; 正常使用","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://linweiyuan.github.io/tags/Nginx/"}]},{"title":"Nginx反向代理WebSocket","slug":"Nginx反向代理WebSocket","date":"2019-04-20T19:13:41.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/04/20/Nginx反向代理WebSocket.html","link":"","permalink":"https://linweiyuan.github.io/2019/04/20/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86WebSocket.html","excerpt":"","text":"123456location /ws &#123; proxy_pass http://?; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &quot;upgrade&quot;;&#125; 实测一个自己的 WS 服务只需proxy_set_header Upgrade $http_upgrade;就足够","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://linweiyuan.github.io/tags/Nginx/"},{"name":"WebSocket","slug":"WebSocket","permalink":"https://linweiyuan.github.io/tags/WebSocket/"}]},{"title":"Maven代理设置","slug":"Maven代理设置","date":"2019-03-29T23:48:25.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/03/29/Maven代理设置.html","link":"","permalink":"https://linweiyuan.github.io/2019/03/29/Maven%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE.html","excerpt":"","text":"参考 -&gt; Configuring a proxy 编辑~/.m2/settings.xml文件 1234567891011&lt;settings&gt; &lt;proxies&gt; &lt;proxy&gt; &lt;id&gt;proxy&lt;/id&gt; &lt;active&gt;true&lt;/active&gt; &lt;protocol&gt;https&lt;/protocol&gt; &lt;host&gt;127.0.0.1&lt;/host&gt; &lt;port&gt;8118&lt;/port&gt; &lt;/proxy&gt; &lt;/proxies&gt;&lt;/settings&gt;","categories":[{"name":"构建工具","slug":"构建工具","permalink":"https://linweiyuan.github.io/categories/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Maven","slug":"Maven","permalink":"https://linweiyuan.github.io/tags/Maven/"},{"name":"Privoxy","slug":"Privoxy","permalink":"https://linweiyuan.github.io/tags/Privoxy/"}]},{"title":"某站用户弱口令","slug":"某站用户弱口令","date":"2019-03-18T15:18:17.000Z","updated":"2022-09-23T15:32:42.156Z","comments":true,"path":"2019/03/18/某站用户弱口令.html","link":"","permalink":"https://linweiyuan.github.io/2019/03/18/%E6%9F%90%E7%AB%99%E7%94%A8%E6%88%B7%E5%BC%B1%E5%8F%A3%E4%BB%A4.html","excerpt":"","text":"借书历史记录 个人信息","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"ASPX","slug":"ASPX","permalink":"https://linweiyuan.github.io/tags/ASPX/"}]},{"title":"创建运行AVD命令","slug":"创建运行AVD命令","date":"2019-03-17T22:24:06.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/03/17/创建运行AVD命令.html","link":"","permalink":"https://linweiyuan.github.io/2019/03/17/%E5%88%9B%E5%BB%BA%E8%BF%90%E8%A1%8CAVD%E5%91%BD%E4%BB%A4.html","excerpt":"","text":"创建 1avdmanager create avd -n &quot;9.0&quot; -k &quot;system-images;android-28;default;x86_64&quot; 运行 1emulator -noaudio -avd 9.0 -noaudio防系统破音","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://linweiyuan.github.io/tags/Android/"},{"name":"AVD","slug":"AVD","permalink":"https://linweiyuan.github.io/tags/AVD/"}]},{"title":"FFmpeg下载M3U8","slug":"FFmpeg下载M3U8","date":"2019-03-12T02:46:10.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/03/12/FFmpeg下载M3U8.html","link":"","permalink":"https://linweiyuan.github.io/2019/03/12/FFmpeg%E4%B8%8B%E8%BD%BDM3U8.html","excerpt":"","text":"1ffmpeg -i url 文件名","categories":[{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"FFmpeg","slug":"FFmpeg","permalink":"https://linweiyuan.github.io/tags/FFmpeg/"}]},{"title":"VirtualBox设置分辨率","slug":"VirtualBox设置分辨率","date":"2019-03-07T01:10:01.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/03/07/VirtualBox设置分辨率.html","link":"","permalink":"https://linweiyuan.github.io/2019/03/07/VirtualBox%E8%AE%BE%E7%BD%AE%E5%88%86%E8%BE%A8%E7%8E%87.html","excerpt":"","text":"1VBoxManage setextradata &quot;虚拟机名字&quot; VBoxInternal2/EfiGraphicsResolution 1920x1080","categories":[{"name":"虚拟机","slug":"虚拟机","permalink":"https://linweiyuan.github.io/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"}],"tags":[{"name":"VirtualBox","slug":"VirtualBox","permalink":"https://linweiyuan.github.io/tags/VirtualBox/"}]},{"title":"Linux生成强密码","slug":"Linux生成强密码","date":"2019-03-07T01:07:32.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/03/07/Linux生成强密码.html","link":"","permalink":"https://linweiyuan.github.io/2019/03/07/Linux%E7%94%9F%E6%88%90%E5%BC%BA%E5%AF%86%E7%A0%81.html","excerpt":"","text":"1openssl rand -base64 32 | head -c 32; echo","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"}]},{"title":"油管视频下载配置","slug":"油管视频下载配置","date":"2019-03-07T00:58:44.000Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"2019/03/07/油管视频下载配置.html","link":"","permalink":"https://linweiyuan.github.io/2019/03/07/%E6%B2%B9%E7%AE%A1%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E9%85%8D%E7%BD%AE.html","excerpt":"","text":"代理下载并设置文件名, 新建或编辑~/.config/youtube-dl/config 12--proxy socks5://127.0.0.1:1080-o %(title)s.%(ext)s","categories":[{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"youtube-dl","slug":"youtube-dl","permalink":"https://linweiyuan.github.io/tags/youtube-dl/"}]},{"title":"直接操作Nextcloud文件","slug":"直接操作Nextcloud文件","date":"2019-02-12T18:03:19.000Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"2019/02/12/直接操作Nextcloud文件.html","link":"","permalink":"https://linweiyuan.github.io/2019/02/12/%E7%9B%B4%E6%8E%A5%E6%93%8D%E4%BD%9CNextcloud%E6%96%87%E4%BB%B6.html","excerpt":"","text":"直接在服务器上面操作文件, 省去了上传操作, 大文件尤其高效 Nextcloud 提供了工具, 将操作同步到数据库中, 注意指定执行用户, 否则会有权限问题 12docker exec -it -u www-data nextcloud ./occ files:cleanupdocker exec -it -u www-data nextcloud ./occ files:scan --all 刷新网页, 即可看到同步效果","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"},{"name":"Nextcloud","slug":"Nextcloud","permalink":"https://linweiyuan.github.io/tags/Nextcloud/"}]},{"title":"某站任意文件上传拿root权限","slug":"某站任意文件上传拿root权限","date":"2019-02-05T13:50:07.000Z","updated":"2022-09-23T15:32:42.156Z","comments":true,"path":"2019/02/05/某站任意文件上传拿root权限.html","link":"","permalink":"https://linweiyuan.github.io/2019/02/05/%E6%9F%90%E7%AB%99%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%8B%BFroot%E6%9D%83%E9%99%90.html","excerpt":"","text":"某站一处图片上传未限制文件类型, 上传小 shell 发现用户是 root, 密码未知 直接上传 ssh 公钥 登录成功","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"JSP","slug":"JSP","permalink":"https://linweiyuan.github.io/tags/JSP/"}]},{"title":"CoreOS初始化脚本","slug":"CoreOS初始化脚本","date":"2019-01-30T14:18:05.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2019/01/30/CoreOS初始化脚本.html","link":"","permalink":"https://linweiyuan.github.io/2019/01/30/CoreOS%E5%88%9D%E5%A7%8B%E5%8C%96%E8%84%9A%E6%9C%AC.html","excerpt":"","text":"1234567891011121314151617181920&#123; &quot;ignition&quot;: &#123; &quot;config&quot;: &#123;&#125;, &quot;timeouts&quot;: &#123;&#125;, &quot;version&quot;: &quot;2.1.0&quot; &#125;, &quot;networkd&quot;: &#123;&#125;, &quot;passwd&quot;: &#123; &quot;users&quot;: [ &#123; &quot;name&quot;: &quot;core&quot;, &quot;sshAuthorizedKeys&quot;: [ &quot;ssh-rsa xxx&quot; ] &#125; ] &#125;, &quot;storage&quot;: &#123;&#125;, &quot;systemd&quot;: &#123;&#125;&#125;","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"CoreOS","slug":"CoreOS","permalink":"https://linweiyuan.github.io/tags/CoreOS/"}]},{"title":"cURL快速连接Tencent-GuestWifi","slug":"cURL快速连接Tencent-GuestWifi","date":"2019-01-16T15:01:09.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2019/01/16/cURL快速连接Tencent-GuestWifi.html","link":"","permalink":"https://linweiyuan.github.io/2019/01/16/cURL%E5%BF%AB%E9%80%9F%E8%BF%9E%E6%8E%A5Tencent-GuestWifi.html","excerpt":"","text":"1curl &quot;http://10.33.172.65:8000/login&quot; -d &quot;username=Tencent-GuestWifi&amp;password=$1&quot; 使用 1./wifi.sh 验证码","categories":[{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"cURL","slug":"cURL","permalink":"https://linweiyuan.github.io/tags/cURL/"}]},{"title":"VirtualBox默认Headless启动","slug":"VirtualBox默认Headless启动","date":"2018-12-29T11:17:37.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/12/29/VirtualBox默认Headless启动.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/29/VirtualBox%E9%BB%98%E8%AE%A4Headless%E5%90%AF%E5%8A%A8.html","excerpt":"","text":"VBox 在 i3 下打开会缩成一个小框, 特别安装了增强工具后, 根本无法正常使用 曲线救国方案 把自动拉伸去掉, 分辨率变成 800x600 把 VBox 改成 Headless 启动隐藏掉 i3 小框, 参考 -&gt; Ticket #13308 1VBoxManage modifyvm &quot;虚拟机名字&quot; --defaultfrontend headless 打开 Remote Display, VBox 菜单上的, 如果 3389 端口映射还需要登录和额外配置不推荐 rdesktop 直连, 找过其他 GUI, 发现不太好使 1alias rdp=&quot;nohup rdesktop-vrdp 127.0.0.1 &amp;&quot; 把 rdesktop 绑定快捷键, 我选的是Alt+Q 1bindsym Mod1+q [class=&quot;rdesktop&quot;] scratchpad show 暂时解决问题","categories":[{"name":"虚拟机","slug":"虚拟机","permalink":"https://linweiyuan.github.io/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"VirtualBox","slug":"VirtualBox","permalink":"https://linweiyuan.github.io/tags/VirtualBox/"},{"name":"i3","slug":"i3","permalink":"https://linweiyuan.github.io/tags/i3/"}]},{"title":"Wget下载Google Drive文件","slug":"Wget下载Google-Drive文件","date":"2018-12-27T18:29:15.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/12/27/Wget下载Google-Drive文件.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/27/Wget%E4%B8%8B%E8%BD%BDGoogle-Drive%E6%96%87%E4%BB%B6.html","excerpt":"","text":"1wget --no-check-certificate -r &#x27;https://docs.google.com/uc?export=download&amp;id=文件ID&#x27; -O 文件名 其中文件 ID 可以在 Share 里获取, 注意-r参数","categories":[{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"Wget","slug":"Wget","permalink":"https://linweiyuan.github.io/tags/Wget/"},{"name":"Google Drive","slug":"Google-Drive","permalink":"https://linweiyuan.github.io/tags/Google-Drive/"}]},{"title":"Arch Linux下IDEA失去焦点","slug":"Arch-Linux下IDEA失去焦点","date":"2018-12-19T19:00:59.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/12/19/Arch-Linux下IDEA失去焦点.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/19/Arch-Linux%E4%B8%8BIDEA%E5%A4%B1%E5%8E%BB%E7%84%A6%E7%82%B9.html","excerpt":"","text":"环境Arch Linux (4.19.9-arch1-1-ARCH) KDE + Plasma IDEA 2018.3.2 描述窗口切换后, 经常切换不回来, 任务栏虽然有焦点, 但是窗口无法显示, 要点其他窗口后再点回 IDEA 才能切换回来, 非常不便 解决方案参考 -&gt; IntelliJ stealing focus, 修改 Help -&gt; Edit Custom Properties 1suppress.focus.stealing=false 重启 IDEA 后, 一切正常","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"},{"name":"IDEA","slug":"IDEA","permalink":"https://linweiyuan.github.io/tags/IDEA/"}]},{"title":"解决ZuulFilter乱码","slug":"解决ZuulFilter乱码","date":"2018-12-17T02:03:38.000Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"2018/12/17/解决ZuulFilter乱码.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/17/%E8%A7%A3%E5%86%B3ZuulFilter%E4%B9%B1%E7%A0%81.html","excerpt":"","text":"设置响应头 1234val context = RequestContext.getCurrentContext()context.setSendZuulResponse(false)context.addZuulResponseHeader(&quot;Content-Type&quot;, &quot;application/json;charset=UTF-8&quot;)context.responseBody = JSON.toJSONString(response)","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Spring Cloud","slug":"Spring-Cloud","permalink":"https://linweiyuan.github.io/tags/Spring-Cloud/"},{"name":"Zuul","slug":"Zuul","permalink":"https://linweiyuan.github.io/tags/Zuul/"}]},{"title":"Spring Boot jar瘦身方案","slug":"Spring-Boot-jar瘦身方案","date":"2018-12-14T18:16:01.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/12/14/Spring-Boot-jar瘦身方案.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/14/Spring-Boot-jar%E7%98%A6%E8%BA%AB%E6%96%B9%E6%A1%88.html","excerpt":"","text":"Spring Boot 固然好用, 十八般武艺集于一身, 但是带来的后果是 jar 包太大, 普通加个 web 模块写个 HelloWorldController 打包出来都要 30+M, 如果要修改一行代码或配置都要重新上传。国外 VPS 还好, 带宽弥补了小延迟的不足, 国内小水管简直不能忍, 当然 CI&#x2F;CD 就另当别论 在使用 Spring Cloud 过程中, 把项目分成了几个微服务, 加了几个 Spring Cloud 组件和项目公用模块后, 打包出来的 jar 有 200+M, 这不利于快速迭代。好在 Maven 和 Gradle 都提供了一些方法 Maven 篇虽然可以通过mvn dependency:copy-dependencies把依赖拷出来, 但是如果项目中有相互依赖, 会报错, 所以还是手动把 jar 包分解 Spring Boot 打包出来的 jar 包结构是 123- BOOT-INF - classes - lib 把 lib 拷到某个位置, 其他微服务 jar 处理方式一样, jar 包提示重复就跳过 分解完后修改parent的pom.xml 1234567891011121314151617&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;layout&gt;ZIP&lt;/layout&gt; &lt;includes&gt; &lt;include&gt; &lt;groupId&gt;qw&lt;/groupId&gt; &lt;artifactId&gt;er&lt;/artifactId&gt; &lt;/include&gt; &lt;/includes&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; groupId和artifactId构造一个不存在的, 然后再打包, 此时打出来的 jar 包结构是 12- BOOT-INF - classes 这里注意 layout 要改成 ZIP, jar 包配置为Main-Class: org.springframework.boot.loader.PropertiesLauncher 如果不改, 配置为Main-Class: org.springframework.boot.loader.JarLauncher, 会无法启动 Gradle 篇 （基于 Kotlin DSL, 非 Groovy）12345678tasks &#123; withType&lt;BootJar&gt; &#123; manifest &#123; attributes(&quot;Main-Class&quot; to &quot;org.springframework.boot.loader.PropertiesLauncher&quot;) &#125; exclude(&quot;**/*.jar&quot;) &#125;&#125; 查看一下大小, 只有 100+K, 未分解之前是 200+M, 此时基本可以实现秒传 最后修改 jar 包启动方式 1java -jar -Dloader.path=jar包分解出来的路径 jar包 或者直接写进配置文件loader.properties（yml 文件不行）再打包, 就不需要额外再指定环境变量 1loader.path=jar包分解出来的路径 此时 jar 可以正常启动提供服务 如果是容器部署, 只需挂载 lib 进去即可","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Spring Cloud","slug":"Spring-Cloud","permalink":"https://linweiyuan.github.io/tags/Spring-Cloud/"},{"name":"Spring Boot","slug":"Spring-Boot","permalink":"https://linweiyuan.github.io/tags/Spring-Boot/"}]},{"title":"控制Docker容器启动顺序","slug":"控制Docker容器启动顺序","date":"2018-12-12T16:07:48.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/12/12/控制Docker容器启动顺序.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/12/%E6%8E%A7%E5%88%B6Docker%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E9%A1%BA%E5%BA%8F.html","excerpt":"","text":"有些场景需要控制 Docker 容器的启动顺序, 比如一个后端服务要依赖 MySQL、Redis、RabbitMQ 等, 又或者 Eureka Client 一定要在 Eureka Server 启动后才能连接、从 Config Server 获取配置等 Docker 提供了 depends_on 等东西, 顾名思义就是处理依赖关系的, 但其实并不是 比如有 A、B, B depends_on A, 容器启动时, Docker 会确保先启动 A 再启动 B, 但是可能 B 启动完了 A 还在启动, 它并不能保证 A 启动完了 B 才启动, 详情 -&gt; Control startup order in Compose Docker 推荐了几个非官方工具, 都试过后, 发现只有dockerize能用 wait-for-it.sh这玩意不兼容 alpine, 直接报错 wait-for这玩意说是兼容了 alpine, 但是使用过程中全部请求都超时无法进行下一步, 不知道是不是打开方式不对 dockerize只需要加入到容器中运行即可, 不想手动加的可以自己 build 一个镜像出来 首先给dockerize加执行权限, 然后编写 Dockerfile 123FROM openjdk:8-jre-alpineADD dockerize /dockerize build 完之后替换原来镜像, 改写执行命令, 比如 Zuul 依赖 Eureka Server 123zuul: image: 你刚build的镜像 command: ./dockerize -wait tcp://eureka-server:8761 -- java -jar -Xms64m -Xmx64m /zuul.jar docker-compose 启动后, 会出现类似信息 12345zuul | 2018/12/12 08:04:37 Waiting for: tcp://eureka-server:8761...zuul_1 | 2018/12/12 08:04:42 Problem with dial: dial tcp 172.17.0.1:8761: connect: connection refused. Sleeping 1s...zuul_1 | 2018/12/12 08:27:10 Connected to tcp://eureka-server:8761 等 Eureka Server 启动完, Zuul 才启动","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"},{"name":"Docker Compose","slug":"Docker-Compose","permalink":"https://linweiyuan.github.io/tags/Docker-Compose/"}]},{"title":"RabbitMQ in Docker内存设置","slug":"RabbitMQ-in-Docker内存设置","date":"2018-12-11T22:41:28.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/12/11/RabbitMQ-in-Docker内存设置.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/11/RabbitMQ-in-Docker%E5%86%85%E5%AD%98%E8%AE%BE%E7%BD%AE.html","excerpt":"","text":"123rabbitmq: environment: - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=96M","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"},{"name":"RabbitMQ","slug":"RabbitMQ","permalink":"https://linweiyuan.github.io/tags/RabbitMQ/"}]},{"title":"Docker容器dpkg报错","slug":"Docker容器dpkg报错","date":"2018-12-10T21:39:25.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/12/10/Docker容器dpkg报错.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/10/Docker%E5%AE%B9%E5%99%A8dpkg%E6%8A%A5%E9%94%99.html","excerpt":"","text":"在 Arch Linux 的 Kernel 滚到 4.19 后, 容器内执行 Debian 系的 dpkg 报错, 一般是 1dpkg: error: error creating new backup file &#x27;/var/lib/dpkg/status-old&#x27;: Invalid cross-device link 原因 -&gt; #836211 - dpkg: Cannot upgrade some packages on overlayfs: Invalid cross-device link - Debian Bug report log 在官方修复这个 bug 之前, 解决方案有两个 降级内核至 4.18 修改内核参数(推荐) 修改内核参数有几个方式, 比较方便的是改/etc/default/grub, 加上overlay.metacopy=N 1GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet overlay.metacopy=N&quot; 修改完后, 重新生成grub.cfg 1sudo grub-mkconfig -o /boot/grub/grub.cfg 到目前为止(18 年 12 月 10 日), 内核滚到了 4.19.8, 这个 bug 还存在4.19.11-arch1-1-ARCH (18 年 12 月 21 日)修复了这个 bug","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"}]},{"title":"Feign使用Hystrix不生效","slug":"Feign使用Hystrix不生效","date":"2018-12-05T22:31:29.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/12/05/Feign使用Hystrix不生效.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/05/Feign%E4%BD%BF%E7%94%A8Hystrix%E4%B8%8D%E7%94%9F%E6%95%88.html","excerpt":"","text":"检查是不是版本问题, 参考 -&gt;Disable HystrixCommands For FeignClients By Default 修改配置 123feign: hystrix: enabled: true","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Spring Cloud","slug":"Spring-Cloud","permalink":"https://linweiyuan.github.io/tags/Spring-Cloud/"},{"name":"Feign","slug":"Feign","permalink":"https://linweiyuan.github.io/tags/Feign/"},{"name":"Hystrix","slug":"Hystrix","permalink":"https://linweiyuan.github.io/tags/Hystrix/"}]},{"title":"Arch Linux解决deepin-wechat闪退","slug":"Arch-Linux解决deepin-wechat闪退","date":"2018-12-05T10:37:11.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/12/05/Arch-Linux解决deepin-wechat闪退.html","link":"","permalink":"https://linweiyuan.github.io/2018/12/05/Arch-Linux%E8%A7%A3%E5%86%B3deepin-wechat%E9%97%AA%E9%80%80.html","excerpt":"","text":"1yaourt -S deepin-wechat 安装后启动闪退, 修改配置文件/opt/deepinwine/apps/Deepin-WeChat/run.sh 原内容 1/opt/deepinwine/tools/run.sh $BOTTLENAME $APPVER &quot;$1&quot; &quot;$2&quot; &quot;$3&quot; 注释掉, 或者替换为 1env WINEPREFIX=&quot;$HOME/.deepinwine/Deepin-WeChat&quot; wine &quot;c:\\\\Program Files\\\\Tencent\\\\WeChat\\\\WeChat.exe&quot; &amp; 启动一切正常, 版本2.6.4.38-4","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"},{"name":"deepin-wechat","slug":"deepin-wechat","permalink":"https://linweiyuan.github.io/tags/deepin-wechat/"}]},{"title":"Arch Linux安装脚本","slug":"Arch-Linux安装脚本","date":"2018-11-17T17:53:20.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/11/17/Arch-Linux安装脚本.html","link":"","permalink":"https://linweiyuan.github.io/2018/11/17/Arch-Linux%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC.html","excerpt":"","text":"适用于UEFI + KDE + Plasma 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299#!/bin/bashprepare() &#123; # 分区 DISK=/dev/nvme0n1 ESP=/dev/nvme0n1p1 ROOT=/dev/nvme0n1p2 parted $DISK mklabel gpt parted $DISK mkpart primary 1 512M parted $DISK mkpart primary &#x27;512M -1&#x27; # -1转义 parted $DISK set 1 boot on # 格式化 mkfs.fat -F32 $ESP mkfs.ext4 $ROOT # 挂载 mount $ROOT /mnt mkdir -p /mnt/boot/efi mount $ESP /mnt/boot/efi # archlinux源 echo &#x27;Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/x86_64&#x27; &gt; /etc/pacman.d/mirrorlist # 安装 pacstrap /mnt base base-devel bash-completion grub efibootmgr genfstab -U -p /mnt &gt; /mnt/etc/fstab # 配置grub arch-chroot /mnt grub-install --efi-directory=/boot/efi --bootloader-id=Arch arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg arch-chroot /mnt sed &#x27;/set timeout=5/&#123;s/5/0/&#125;&#x27; -i /boot/grub/grub.cfg # 后面还会用到 cp install.sh /mnt/root # 重启 umount /mnt/boot/efi umount /mnt reboot -f&#125;pgk=( adobe-source-han-sans-cn-fonts adobe-source-han-sans-jp-fonts adobe-source-han-sans-kr-fonts # anaconda android-apktool android-emulator android-file-transfer # android-ndk android-platform android-sdk-build-tools android-studio android-support android-support-repository android-tools apache-tools ark chromium deepin-screenshot deepin-screen-recorder docker docker-compose # docker-machine dolphin fcitx-im fcitx-sogoupinyin filelight filezilla # gimp git gwenview gradle intellij-idea-ultimate-edition intellij-idea-ultimate-edition-jre jdk8 jq kate kcm-fcitx kdialog kinfocenter konsole libreoffice-still libsodium lrzsz maven metasploit mlocate netease-cloud-music net-tools nodejs noto-fonts noto-fonts-emoji npm ntfs-3g okteta okular # openntpd openssh pepper-flash phonon-qt5-vlc plasma-desktop plasma-nm plasma-pa powerdevil # powerpill privoxy proxychains-ng python-pip redis-desktop-manager rsync sddm shadowsocks sublime-text-dev teamviewer typora unrar unzip user-manager virtualbox-ext-oracle virtualbox-guest-iso virtualbox-host-modules-arch vokoscreen-git wewechat wireshark-qt xorg-server xorg-xkill yakuake youtube-dl zip zsh)aur=( android-google-repository android-sources-28 android-x86-64-system-image-28 archlinux-themes-sddm burpsuite deepin-wine-thunderspeed dex2jar dirbuster # jd-gui # build太久 maltego python-genpac)aur() &#123; yaourt -S --noconfirm --needed $&#123;aur[@]&#125;&#125;setup() &#123; # 基本数据 HOSTNAME=&#x27;主机名&#x27; USERNAME=&#x27;用户名&#x27; PASSWORD=&#x27;密码&#x27; SS_CONFIG_NAME=&#x27;SS配置文件名&#x27; SS_SERVER=&#x27;SS服务器地址&#x27; SS_PORT=&#x27;SS端口&#x27; SS_PASSWORD=&#x27;SS密码&#x27; SS_METHOD=&#x27;SS加密方式&#x27; # archlinuxcn源 sed &#x27;/#Color\\|#TotalDownload\\|#\\[multilib\\]/&#123;s/#//&#125;&#x27; -i /etc/pacman.conf sed &#x27;s/Required DatabaseOptional/Never/g&#x27; -i /etc/pacman.conf sed &#x27;94s/#//&#x27; -i /etc/pacman.conf # [multilib] echo -e &#x27;\\n[archlinuxcn]\\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/x86_64&#x27; &gt;&gt; /etc/pacman.conf pacman -Syy --noconfirm archlinuxcn-keyring yaourt # 用户 useradd -m $USERNAME # sudo免密码 echo -e &quot;\\n$USERNAME ALL=(ALL) NOPASSWD: ALL&quot; &gt;&gt; /etc/sudoers echo $USERNAME:$PASSWORD | chpasswd # 安装需要的包 pacman -S --noconfirm --needed $&#123;pgk[@]&#125; # shadowsocks mv /etc/shadowsocks/example.json /etc/shadowsocks/$SS_CONFIG_NAME.json sed &quot;s/my_server_ip/$SS_SERVER/g&quot; -i /etc/shadowsocks/$SS_CONFIG_NAME.json sed &quot;s/8388/$SS_PORT/g&quot; -i /etc/shadowsocks/$SS_CONFIG_NAME.json sed &quot;s/mypassword/$SS_PASSWORD/g&quot; -i /etc/shadowsocks/$SS_CONFIG_NAME.json sed &quot;s/aes-256-cfb/$SS_METHOD/g&quot; -i /etc/shadowsocks/$SS_CONFIG_NAME.json systemctl enable shadowsocks@$SS_CONFIG_NAME.service systemctl start shadowsocks@$SS_CONFIG_NAME.service # proxychains-ng sed &#x27;/#quiet_mode/&#123;s/#//&#125;&#x27; -i /etc/proxychains.conf # 减少输出 sed &quot;s/socks4 127.0.0.1 9050/\\nsocks5 127.0.0.1 1080/g&quot; -i /etc/proxychains.conf # privoxy sed &#x27;s/127.0.0.1:8118/0.0.0.0:8118/g&#x27; -i /etc/privoxy/config echo -e &#x27;\\nforward-socks5 / 127.0.0.1:1080 .&#x27; &gt;&gt; /etc/privoxy/config systemctl enable privoxy.service systemctl start privoxy.service sleep 1s # 配置生效延迟 # AUR使用HTTP代理 export http_proxy=127.0.0.1:8118 export https_proxy=127.0.0.1:8118 # AUR不能用root cp install.sh /home/$USERNAME/ chown $USERNAME:$USERNAME /home/$USERNAME/install.sh cd /home/$USERNAME # 权限问题 su $USERNAME -c &quot;/home/$USERNAME/install.sh aur&quot; ################################################## # 详细配置 # 主机 hostnamectl set-hostname $HOSTNAME # 时区 timedatectl set-timezone Asia/Shanghai # 国际化 sed &#x27;/#en_US.UTF-8\\|#zh_CN.UTF-8/&#123;s/#//&#125;&#x27; -i /etc/locale.gen locale-gen echo &#x27;LANG=en_US.UTF-8&#x27; &gt; /etc/locale.conf # 基本文件夹 su $USERNAME -c &#x27;cd ~ &amp;&amp; mkdir Data Documents Downloads Music Pictures Project Software Temp Videos&#x27; # anaconda # echo &#x27;export PATH=/opt/anaconda/bin:$PATH&#x27; &gt;&gt; /etc/profile # android echo &#x27;export ANDROID_HOME=/opt/android-sdk&#x27; &gt;&gt; /etc/profile ln -s /opt/android-ndk /opt/android-sdk/ndk-bundle chown -R $USERNAME:$USERNAME /opt/android-sdk # Android Studio需要写文件到这些目录，AUR里找不到包 # chown -R $USERNAME:$USERNAME /opt/android-ndk # deepin-screen-recorder su $USERNAME -c &quot;mkdir -p /home/$USERNAME/.config/deepin/deepin-screen-recorder&quot; su $USERNAME -c &quot;echo -e \\&quot;[fileformat]\\nsave_directory=/home/$USERNAME/Videos\\&quot; &gt; ~/.config/deepin/deepin-screen-recorder/config.conf&quot; # docker gpasswd -a $USERNAME docker mkdir /etc/systemd/system/docker.service.d echo -e &#x27;[Service]\\nEnvironment=&quot;HTTP_PROXY=127.0.0.1:8118&quot;\\nEnvironment=&quot;HTTPS_PROXY=127.0.0.1:8118&quot;&#x27; &gt; /etc/systemd/system/docker.service.d/proxy.conf # 即使官方中国仓库或阿里云也不好使 systemctl enable docker.service # fcitx su $USERNAME -c &quot;echo -e &#x27;export GTK_IM_MODULE=fcitx\\nexport QT_IM_MODULE=fcitx\\nexport XMODIFIERS=@im=fcitx&#x27; &gt; /home/$USERNAME/.xprofile&quot; # jdk echo &#x27;export JAVA_HOME=/usr/lib/jvm/java-8-jdk&#x27; &gt;&gt; /etc/profile # mlocate updatedb # nano sed &#x27;48s/# //&#x27; -i /etc/nanorc # 行号 sed &#x27;262s/# //&#x27; -i /etc/nanorc # 代码高亮 # nodejs npm i -g cnpm --registry=https://registry.npm.taobao.org npm i -g hexo-cli # openntpd # systemctl enable openntpd.service # systemctl start openntpd.service # plasma-nm systemctl enable NetworkManager.service # privoxy sed &#x27;s/127.0.0.1:8118/0.0.0.0:8118/g&#x27; -i /etc/privoxy/config echo -e &#x27;\\nforward-socks5 / 127.0.0.1:1080 .&#x27; &gt;&gt; /etc/privoxy/config systemctl enable privoxy.service systemctl start privoxy.service # python-genpac su $USERNAME -c &quot;genpac --format=pac --pac-proxy=\\&quot;SOCKS5 127.0.0.1:1080\\&quot; &gt; /home/$USERNAME/.pac&quot; # sddm sddm --example-config &gt; /etc/sddm.conf sed &#x27;/Current=/&#123;s/=/=archlinux-simplyblack/&#125;&#x27; -i /etc/sddm.conf # 主题 systemctl enable sddm.service # teamviewer systemctl enable teamviewerd.service # virtualbox gpasswd -a $USERNAME vboxusers # wireshark gpasswd -a $USERNAME wireshark # zsh echo $PASSWORD | sudo -S su $USERNAME -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot; reboot -f&#125;$1 进入 livecd 时执行 1./install.sh prepare 重启后执行 1./install setup","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Shell","slug":"Shell","permalink":"https://linweiyuan.github.io/tags/Shell/"},{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"}]},{"title":"Kotlin重启天翼网关","slug":"Kotlin重启天翼网关","date":"2018-11-13T18:24:39.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/11/13/Kotlin重启天翼网关.html","link":"","permalink":"https://linweiyuan.github.io/2018/11/13/Kotlin%E9%87%8D%E5%90%AF%E5%A4%A9%E7%BF%BC%E7%BD%91%E5%85%B3.html","excerpt":"","text":"Jsoup 依赖 1implementation &quot;org.jsoup:jsoup:1.11.3&quot; 1234567891011121314151617181920212223242526272829303132333435363738import org.jsoup.Connectionimport org.jsoup.Jsoupimport java.util.regex.Patternfun main(args: Array&lt;String&gt;) &#123; val username = &quot;admin&quot; val password = &quot;123456&quot; val gateway = &quot;http://192.168.1.1&quot; val indexUrl = &quot;$gateway/cgi-bin/luci&quot; val rebootUrl = &quot;$gateway/cgi-bin/luci/admin/reboot&quot; val response = Jsoup.connect(indexUrl) .data(&quot;username&quot;, username) .data(&quot;psd&quot;, password) .method(Connection.Method.POST) .followRedirects(false) .execute() when (response.statusCode()) &#123; 200 -&gt; println(&quot;用户名或密码错误&quot;) 302 -&gt; &#123; val cookies = response.cookies() val html = Jsoup.connect(&quot;$gateway$&#123;response.header(&quot;Location&quot;)&#125;&quot;) .cookies(cookies) .get() .html() val matcher = Pattern.compile(&quot;token: &#x27;(.*?)&#x27;&quot;).matcher(html) if (matcher.find()) &#123; Jsoup.connect(rebootUrl) .cookies(cookies) .data(&quot;token&quot;, matcher.group(1)) .post() &#125; &#125; &#125;&#125;","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Kotlin","slug":"Kotlin","permalink":"https://linweiyuan.github.io/tags/Kotlin/"},{"name":"jsoup","slug":"jsoup","permalink":"https://linweiyuan.github.io/tags/jsoup/"}]},{"title":"@Cacheable注解不生效","slug":"Cacheable注解不生效","date":"2018-10-30T23:17:12.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/10/30/Cacheable注解不生效.html","link":"","permalink":"https://linweiyuan.github.io/2018/10/30/Cacheable%E6%B3%A8%E8%A7%A3%E4%B8%8D%E7%94%9F%E6%95%88.html","excerpt":"","text":"通过学习, 知道@Cacheable是代理, 调用内部方法不生效, 但是遇到了 Shiro 下缓存失效问题, 参考 -&gt; Spring service with cacheable methods gets initialized without cache when autowired in Shiro realm, 解决了问题 1@Lazy","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://linweiyuan.github.io/tags/Java/"},{"name":"Redis","slug":"Redis","permalink":"https://linweiyuan.github.io/tags/Redis/"}]},{"title":"Arch Linux网易云音乐Bug解决","slug":"Arch-Linux网易云音乐Bug解决","date":"2018-10-28T00:50:12.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/10/28/Arch-Linux网易云音乐Bug解决.html","link":"","permalink":"https://linweiyuan.github.io/2018/10/28/Arch-Linux%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90Bug%E8%A7%A3%E5%86%B3.html","excerpt":"","text":"忘记从哪个版本开始, 网易云音乐打开关掉界面后, 程序在系统托盘区走到了通知栏那里 (KDE + Plasma), 并且无法打开右键菜单, 参考 -&gt; AUR (en) - netease-cloud-music上的解决方案, 修改启动命令 1XDG_CURRENT_DESKTOP=DDE netease-cloud-music %U","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"}]},{"title":"Arch Linux取消Redis Desktop Manager的自动更新","slug":"Arch-Linux取消Redis-Desktop-Manager的自动更新","date":"2018-10-28T00:38:51.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/10/28/Arch-Linux取消Redis-Desktop-Manager的自动更新.html","link":"","permalink":"https://linweiyuan.github.io/2018/10/28/Arch-Linux%E5%8F%96%E6%B6%88Redis-Desktop-Manager%E7%9A%84%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0.html","excerpt":"","text":"让Pacman去管理软件的生命周期比较好, 修改/etc/hosts 10.0.0.0 redisdesktop.com","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"}]},{"title":"解决SSH登录CentOS慢","slug":"解决SSH登录CentOS慢","date":"2018-10-18T18:00:25.000Z","updated":"2022-09-23T15:32:42.164Z","comments":true,"path":"2018/10/18/解决SSH登录CentOS慢.html","link":"","permalink":"https://linweiyuan.github.io/2018/10/18/%E8%A7%A3%E5%86%B3SSH%E7%99%BB%E5%BD%95CentOS%E6%85%A2.html","excerpt":"","text":"关闭 DNS 反向解析 编辑/etc/ssh/sshd_config 1UseDNS no","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://linweiyuan.github.io/tags/CentOS/"}]},{"title":"Arch Linux搜狗输入法滚挂","slug":"Arch-Linux搜狗输入法滚挂","date":"2018-09-15T11:41:17.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/09/15/Arch-Linux搜狗输入法滚挂.html","link":"","permalink":"https://linweiyuan.github.io/2018/09/15/Arch-Linux%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E6%BB%9A%E6%8C%82.html","excerpt":"","text":"搜狗输入法滚挂了, 老是提示输入法异常, 请删除配置文件什么的, 试过全部不行 不知道怎么解决, WiKi 也没说什么, 于是自己摸索 台式机滚挂了, 笔记本还是好的, 于是把配置 rsync 过去, not work 重现环境, 升级笔记本, 重启后果然滚挂了, 查看日志揪出几个软件 改源、pacman -Suu 降级、pacman -U 等一系列操作最后的最后发现是 libidn-1.34-2-x86_64.pkg.tar.xz 由于 vlc-3.0.4-2-x86_64.pkg.tar.xz 又依赖它, 所以把这两个暂时加入 IgnorePkg 恢复正常, 搜狗输入法当前版本版本2.2.0.0108-3 当天输入法更新, 修复了这个 bug -&gt; fcitx-sogoupinyin 2.2.0.0108-4","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"},{"name":"Fcitx","slug":"Fcitx","permalink":"https://linweiyuan.github.io/tags/Fcitx/"}]},{"title":"MySQL in Docker时区设置","slug":"MySQL-in-Docker时区设置","date":"2018-09-04T18:03:54.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/09/04/MySQL-in-Docker时区设置.html","link":"","permalink":"https://linweiyuan.github.io/2018/09/04/MySQL-in-Docker%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE.html","excerpt":"","text":"123mysql: environment: - TZ=Asia/Shanghai","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"},{"name":"MySQL","slug":"MySQL","permalink":"https://linweiyuan.github.io/tags/MySQL/"}]},{"title":"Jenkins in Docker修改时间","slug":"Jenkins-in-Docker时区设置","date":"2018-09-03T23:02:26.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/09/03/Jenkins-in-Docker时区设置.html","link":"","permalink":"https://linweiyuan.github.io/2018/09/03/Jenkins-in-Docker%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE.html","excerpt":"","text":"官方文档访问 403, 查资料和测试, 下面方式可行 12345jenkins: environment: - JAVA_OPTS=-Duser.timezone=Asia/Shanghai volumes: - /etc/localtime:/etc/localtime","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"},{"name":"Jenkins","slug":"Jenkins","permalink":"https://linweiyuan.github.io/tags/Jenkins/"}]},{"title":"某站MySQL弱口令导致任意数据修改","slug":"某站MySQL弱口令导致任意数据修改","date":"2018-08-25T13:21:24.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/08/25/某站MySQL弱口令导致任意数据修改.html","link":"","permalink":"https://linweiyuan.github.io/2018/08/25/%E6%9F%90%E7%AB%99MySQL%E5%BC%B1%E5%8F%A3%E4%BB%A4%E5%AF%BC%E8%87%B4%E4%BB%BB%E6%84%8F%E6%95%B0%E6%8D%AE%E4%BF%AE%E6%94%B9.html","excerpt":"","text":"业务数据库 jeeplus 任意数据增删改查","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://linweiyuan.github.io/tags/MySQL/"},{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"}]},{"title":"某站MySQL弱口令","slug":"某站MySQL弱口令","date":"2018-08-12T11:52:12.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/08/12/某站MySQL弱口令.html","link":"","permalink":"https://linweiyuan.github.io/2018/08/12/%E6%9F%90%E7%AB%99MySQL%E5%BC%B1%E5%8F%A3%E4%BB%A4.html","excerpt":"","text":"任意表增删改查","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://linweiyuan.github.io/tags/MySQL/"},{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"}]},{"title":"修改war包里面的内容","slug":"修改war包里面的内容","date":"2018-07-18T14:22:48.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/07/18/修改war包里面的内容.html","link":"","permalink":"https://linweiyuan.github.io/2018/07/18/%E4%BF%AE%E6%94%B9war%E5%8C%85%E9%87%8C%E9%9D%A2%E7%9A%84%E5%86%85%E5%AE%B9.html","excerpt":"","text":"一般情况下, 开发会分为dev、test、prod或更多, 在没有很好地处理好自动化的情况下就要人工打包, 人就难免会出现失误 先解包, 用jar而不是java 1jar -xvf war包 修改好文件, 再替换封包 1jar -uvf war包 修改的文件的路径 前后路径要一致","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://linweiyuan.github.io/tags/Java/"},{"name":"war","slug":"war","permalink":"https://linweiyuan.github.io/tags/war/"}]},{"title":"Linux路由配置","slug":"Linux路由配置","date":"2018-07-17T10:11:18.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/07/17/Linux路由配置.html","link":"","permalink":"https://linweiyuan.github.io/2018/07/17/Linux%E8%B7%AF%E7%94%B1%E9%85%8D%E7%BD%AE.html","excerpt":"","text":"123sudo route delete -net 0.0.0.0 wlp2s0sudo route add -net 10.124.0.0 gw 172.27.35.1 netmask 255.255.0.0 wlp2s0sudo route add -net 10.150.0.0 gw 172.27.35.1 netmask 255.255.0.0 wlp2s0","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"}]},{"title":"Gitlab更新代码提示","slug":"GitLab更新代码提示","date":"2018-07-13T16:50:13.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/07/13/GitLab更新代码提示.html","link":"","permalink":"https://linweiyuan.github.io/2018/07/13/GitLab%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81%E6%8F%90%E7%A4%BA.html","excerpt":"","text":"发送端 1234567891011121314151617try &#123; StringBuilder content = new StringBuilder(); List&lt;Commits&gt; commits = root.getCommits(); for (Commits commit : commits) &#123; Author author = commit.getAuthor(); content.append(author.getName()).append(&quot; - &quot;).append(author.getEmail()).append(&quot;\\n\\n&quot;) .append(&quot;push detected&quot;).append(&quot;\\n\\n&quot;) .append(commit.getMessage()); byte[] bytes = content.toString().getBytes(); DatagramSocket socket = new DatagramSocket(); socket.send(new DatagramPacket(bytes, bytes.length, InetAddress.getByName(&quot;192.168.1.255&quot;), 11111)); socket.close(); &#125;&#125; catch (Exception e) &#123; e.printStackTrace();&#125; 接收端 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879import javax.imageio.ImageIO;import javax.swing.*;import java.awt.*;import java.awt.event.MouseAdapter;import java.awt.event.MouseEvent;import java.net.DatagramPacket;import java.net.DatagramSocket;public class Reminder extends JFrame &#123; private DatagramSocket socket; public Reminder() throws Exception &#123; initSystemTray(); initListen(initSocket()); &#125; private void initSystemTray() throws Exception &#123; SystemTray tray = SystemTray.getSystemTray(); TrayIcon trayIcon = new TrayIcon(ImageIO.read(getClass().getResourceAsStream(&quot;icon.png&quot;)), &quot;&quot;); trayIcon.setToolTip(&quot;&quot;); tray.add(trayIcon); trayIcon.addMouseListener(new MouseAdapter() &#123; @Override public void mouseClicked(MouseEvent e) &#123; if (e.getButton() == MouseEvent.BUTTON2) &#123; socket.close(); System.exit(0); &#125; &#125; &#125;); &#125; private DatagramPacket initSocket() throws Exception &#123; socket = new DatagramSocket(11111); byte[] bytes = new byte[1024]; return new DatagramPacket(bytes, bytes.length); &#125; private void initListen(DatagramPacket packet) throws Exception &#123; while (true) &#123; socket.receive(packet); showDialog(packet); &#125; &#125; private void showDialog(DatagramPacket packet) &#123; JFrame frame = new JFrame(); frame.setSize(300, 150); frame.setLocationRelativeTo(null); frame.setDefaultCloseOperation(DISPOSE_ON_CLOSE); JTextArea area = new JTextArea(); String osName = System.getProperty(&quot;os.name&quot;); switch (osName) &#123; case &quot;Linux&quot;: area.setFont(new Font(&quot;WenQuanYi Micro Hei&quot;, Font.PLAIN, 14)); break; default: break; &#125; area.setText(new String(packet.getData())); frame.add(area); frame.setVisible(true); &#125; public static void main(String[] args) &#123; try &#123; new Reminder(); UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125;","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"GitLab","slug":"GitLab","permalink":"https://linweiyuan.github.io/tags/GitLab/"},{"name":"Socket","slug":"Socket","permalink":"https://linweiyuan.github.io/tags/Socket/"},{"name":"UDP","slug":"UDP","permalink":"https://linweiyuan.github.io/tags/UDP/"},{"name":"Swing","slug":"Swing","permalink":"https://linweiyuan.github.io/tags/Swing/"}]},{"title":"无图形化界面下WebLogic第三方API","slug":"无图形化界面下WebLogic第三方API","date":"2018-06-19T16:20:32.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/06/19/无图形化界面下WebLogic第三方API.html","link":"","permalink":"https://linweiyuan.github.io/2018/06/19/%E6%97%A0%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%E4%B8%8BWebLogic%E7%AC%AC%E4%B8%89%E6%96%B9API.html","excerpt":"","text":"部署 1234567java -cp weblogic.jar weblogic.Deployer \\-adminurl t3://127.0.0.1:7001 \\-user 用户名 \\-password 密码 \\-redeploy \\-name 自定义名字 \\-source war包 更改中心的锁定并编辑 -&gt; 释放配置 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061import org.jsoup.Connection;import org.jsoup.Jsoup;import java.util.Map;public class FuckWebLogic &#123; public static void main(String[] args) &#123; try &#123; String SERVER = &quot;http://127.0.0.1:7001/console&quot;; Connection connection = Jsoup.connect(SERVER + &quot;/j_security_check&quot;) .method(Connection.Method.POST) .data(&quot;j_username&quot;, &quot;username&quot;) .data(&quot;j_password&quot;, &quot;password&quot;) .followRedirects(false);//不自动重定向, 为了下面根据状态码判断是否登录成功, 不然都是返回200 Connection.Response response = connection.execute(); int statusCode = response.statusCode(); switch (statusCode) &#123; case 200: System.out.println(&quot;login err&quot;); break; case 302: System.out.println(&quot;login ok&quot;); //登录成功的Cookie Map&lt;String, String&gt; cookies = response.cookies(); System.out.println(&quot;Cookie -&gt; &quot; + cookies); //获取页面的防CSRF隐藏参数（这里类似验证码的效果） String token = connection.url(SERVER + &quot;/console.portal&quot;) .method(Connection.Method.GET) .cookies(cookies) .followRedirects(true)//这里就要设置true了 .execute() .parse() .select(&quot;input[name=ChangeManagerPortletfrsc]&quot;).val(); System.out.println(&quot;Token -&gt; &quot; + token); //这时要刷新Cookie, 和上面的隐藏参数要对得上 cookies = response.cookies(); System.out.println(&quot;new Cookie -&gt; &quot; + cookies); //模拟点击操作 response = connection.url(SERVER + &quot;/console.portal&quot;) .method(Connection.Method.POST) .data(&quot;ChangeManagerPortlet_actionOverride&quot;, &quot;/StopEditAction&quot;) .data(&quot;ChangeManagerPortletfrsc&quot;, token) .cookies(cookies) .execute(); //如果标题没有指定字符串, 说明Cookie错误, 跳到登录页了 System.out.println(response.body().contains(&quot;dmz&quot;) ? &quot;ok&quot; : &quot;err&quot;); break; &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125;","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"jsoup","slug":"jsoup","permalink":"https://linweiyuan.github.io/tags/jsoup/"},{"name":"WebLogic","slug":"WebLogic","permalink":"https://linweiyuan.github.io/tags/WebLogic/"}]},{"title":"WebLogic远程调试","slug":"WebLogic远程调试","date":"2018-06-07T11:04:08.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/06/07/WebLogic远程调试.html","link":"","permalink":"https://linweiyuan.github.io/2018/06/07/WebLogic%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95.html","excerpt":"","text":"修改环境变量Software/WebLogic/Oracle/Middleware/Oracle_Home/user_projects/domains/idc/bin/setDomainEnv.sh 修改端口 1234if [ &quot;$&#123;DEBUG_PORT&#125;&quot; = &quot;&quot; ] ; then DEBUG_PORT=&quot;9088&quot; export DEBUG_PORTfi 打开调试 123456789if [ &quot;true&quot; = &quot;true&quot; ] ; then JAVA_DEBUG=&quot;-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=$&#123;DEBUG_PORT&#125;,server=y,suspend=n -Djava.compiler=NONE&quot; export JAVA_DEBUG JAVA_OPTIONS=&quot;$&#123;JAVA_OPTIONS&#125; $&#123;enableHotswapFlag&#125; -ea -da:com.bea... -da:javelin... -da:weblogic... -ea:com.bea.wli... -ea:com.bea.broker... -ea:com.bea.sbconsole...&quot; export JAVA_OPTIONSelse JAVA_OPTIONS=&quot;$&#123;JAVA_OPTIONS&#125; $&#123;enableHotswapFlag&#125; -da&quot; export JAVA_OPTIONSfi 简单粗暴","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"IDEA","slug":"IDEA","permalink":"https://linweiyuan.github.io/tags/IDEA/"},{"name":"WebLogic","slug":"WebLogic","permalink":"https://linweiyuan.github.io/tags/WebLogic/"}]},{"title":"Ant脚本杀掉Tomcat","slug":"Ant脚本杀掉Tomcat","date":"2018-05-25T09:42:11.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/05/25/Ant脚本杀掉Tomcat.html","link":"","permalink":"https://linweiyuan.github.io/2018/05/25/Ant%E8%84%9A%E6%9C%AC%E6%9D%80%E6%8E%89Tomcat.html","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;project name=&quot;项目名&quot; basedir=&quot;.&quot; default=&quot;deploy&quot;&gt; &lt;property name=&quot;src.dir&quot; value=&quot;src&quot;/&gt; &lt;property name=&quot;web.dir&quot; value=&quot;web&quot;/&gt; &lt;property name=&quot;build.dir&quot; value=&quot;$&#123;web.dir&#125;/WEB-INF/classes&quot;/&gt; &lt;property name=&quot;tomcat.name&quot; value=&quot;Tomcat目录名&quot;/&gt; &lt;property name=&quot;tomcat.path&quot; value=&quot;Tomcat路径&quot;/&gt; &lt;property name=&quot;deploy.path&quot; value=&quot;$&#123;tomcat.path&#125;/webapps&quot;/&gt; &lt;property name=&quot;war.name&quot; value=&quot;war包&quot;/&gt; &lt;property name=&quot;jdk.version&quot; value=&quot;1.8&quot;/&gt; &lt;path id=&quot;classpath&quot;&gt; &lt;fileset dir=&quot;$&#123;web.dir&#125;/WEB-INF/lib&quot; includes=&quot;*.jar&quot;/&gt; &lt;pathelement path=&quot;$&#123;build.dir&#125;&quot;/&gt; &lt;/path&gt; &lt;target name=&quot;clean&quot;&gt; &lt;echo message=&quot;clean start...&quot;/&gt; &lt;delete&gt; &lt;fileset dir=&quot;$&#123;build.dir&#125;&quot;&gt; &lt;include name=&quot;**/*.class&quot;/&gt; &lt;/fileset&gt; &lt;/delete&gt; &lt;echo message=&quot;clean end...&quot;/&gt; &lt;/target&gt; &lt;target name=&quot;build&quot; depends=&quot;clean&quot;&gt; &lt;echo message=&quot;build start...&quot;/&gt; &lt;mkdir dir=&quot;$&#123;build.dir&#125;&quot;/&gt; &lt;javac destdir=&quot;$&#123;build.dir&#125;&quot; source=&quot;$&#123;jdk.version&#125;&quot; target=&quot;$&#123;jdk.version&#125;&quot; includeantruntime=&quot;true&quot; nowarn=&quot;true&quot;&gt; &lt;src path=&quot;$&#123;src.dir&#125;&quot;/&gt; &lt;classpath refid=&quot;classpath&quot;/&gt; &lt;/javac&gt; &lt;echo message=&quot;build end...&quot;/&gt; &lt;/target&gt; &lt;target name=&quot;war&quot; depends=&quot;build&quot;&gt; &lt;echo message=&quot;pack war start...&quot;/&gt; &lt;tstamp&gt; &lt;format property=&quot;date&quot; pattern=&quot;yyyy_MM_dd&quot;/&gt; &lt;/tstamp&gt; &lt;war destfile=&quot;自定义名字_$&#123;date&#125;.war&quot; webxml=&quot;$&#123;web.dir&#125;/WEB-INF/web.xml&quot;&gt; &lt;fileset dir=&quot;$&#123;web.dir&#125;&quot;&gt; &lt;include name=&quot;**/*.*&quot;/&gt; &lt;/fileset&gt; &lt;classes dir=&quot;$&#123;build.dir&#125;&quot;/&gt; &lt;/war&gt; &lt;echo message=&quot;pack war end...&quot;/&gt; &lt;echo message=&quot;copy war start...&quot;/&gt; &lt;copy tofile=&quot;$&#123;deploy.path&#125;/$&#123;war.name&#125;&quot; preservelastmodified=&quot;true&quot; overwrite=&quot;true&quot;&gt; &lt;fileset dir=&quot;.&quot;&gt; &lt;include name=&quot;自定义名字$&#123;date&#125;.war&quot;/&gt; &lt;/fileset&gt; &lt;/copy&gt; &lt;echo message=&quot;copy war end...&quot;/&gt; &lt;/target&gt; &lt;target name=&quot;deploy&quot; depends=&quot;war&quot;&gt; &lt;echo message=&quot;shutdown tomcat start...&quot;/&gt; &lt;exec executable=&quot;/bin/zsh&quot;&gt; &lt;arg value=&quot;-c&quot;/&gt; &lt;arg value=&quot;ps x | grep tomcat | grep -v grep | awk &#x27;&#123;print $1&#125;&#x27; | xargs kill -9 &amp;amp; &gt; /dev/null&quot;/&gt; &lt;/exec&gt; &lt;echo message=&quot;shutdown tomcat end...&quot;/&gt; &lt;echo message=&quot;startup tomcat start...&quot;/&gt; &lt;exec executable=&quot;/bin/zsh&quot;&gt; &lt;arg value=&quot;$&#123;tomcat.path&#125;/bin/startup.sh&quot;/&gt; &lt;/exec&gt; &lt;echo message=&quot;startup tomcat end...&quot;/&gt; &lt;/target&gt;&lt;/project&gt;","categories":[{"name":"构建工具","slug":"构建工具","permalink":"https://linweiyuan.github.io/categories/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Ant","slug":"Ant","permalink":"https://linweiyuan.github.io/tags/Ant/"},{"name":"Tomcat","slug":"Tomcat","permalink":"https://linweiyuan.github.io/tags/Tomcat/"},{"name":"Shell","slug":"Shell","permalink":"https://linweiyuan.github.io/tags/Shell/"}]},{"title":"KDE开启VNC","slug":"KDE开启VNC","date":"2018-04-29T12:09:03.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/04/29/KDE开启VNC.html","link":"","permalink":"https://linweiyuan.github.io/2018/04/29/KDE%E5%BC%80%E5%90%AFVNC.html","excerpt":"","text":"TigerVNC 12#!/bin/shdbus-launch startkde KDE Plasma显示正常","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"},{"name":"KDE","slug":"KDE","permalink":"https://linweiyuan.github.io/tags/KDE/"},{"name":"TigerVNC","slug":"TigerVNC","permalink":"https://linweiyuan.github.io/tags/TigerVNC/"}]},{"title":"Tomcat远程调试","slug":"Tomcat远程调试","date":"2018-04-19T11:00:47.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/04/19/Tomcat远程调试.html","link":"","permalink":"https://linweiyuan.github.io/2018/04/19/Tomcat%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95.html","excerpt":"","text":"1./catalina.sh jpda start","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"Tomcat","slug":"Tomcat","permalink":"https://linweiyuan.github.io/tags/Tomcat/"},{"name":"IDEA","slug":"IDEA","permalink":"https://linweiyuan.github.io/tags/IDEA/"}]},{"title":"Git批量恢复删除的文件","slug":"Git批量恢复删除的文件","date":"2018-04-17T15:43:26.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/04/17/Git批量恢复删除的文件.html","link":"","permalink":"https://linweiyuan.github.io/2018/04/17/Git%E6%89%B9%E9%87%8F%E6%81%A2%E5%A4%8D%E5%88%A0%E9%99%A4%E7%9A%84%E6%96%87%E4%BB%B6.html","excerpt":"","text":"1git ls-files -d | xargs -i git checkout &#123;&#125;","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"}]},{"title":"某站XSS漏洞","slug":"某站XSS漏洞-1","date":"2018-03-25T14:12:11.000Z","updated":"2022-09-23T15:32:42.156Z","comments":true,"path":"2018/03/25/某站XSS漏洞-1.html","link":"","permalink":"https://linweiyuan.github.io/2018/03/25/%E6%9F%90%E7%AB%99XSS%E6%BC%8F%E6%B4%9E-1.html","excerpt":"","text":"弹窗","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"XSS","slug":"XSS","permalink":"https://linweiyuan.github.io/tags/XSS/"}]},{"title":"Manjaro的RTL8192EU无线网卡驱动","slug":"Manjaro的RTL8192EU无线网卡驱动","date":"2018-03-12T09:22:19.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/03/12/Manjaro的RTL8192EU无线网卡驱动.html","link":"","permalink":"https://linweiyuan.github.io/2018/03/12/Manjaro%E7%9A%84RTL8192EU%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8.html","excerpt":"","text":"TP-LINK 的TL-WN821N在 Manjaro 下插上了能搜到 Wi-Fi 信号, 但是信号很弱并且输入正确的密码后一直无法连接上, lsusb发现是 1Bus 001 Device 002: ID 0bda:818b Realtek Semiconductor Corp. RTL8192EU 802.11b/g/n WLAN Adapter 然而, lshw -c network却发现 1configuration: broadcast=yes driver=rtl8xxxu driverversion=4.14.24-1-MANJARO firmware=N/A link=no multicast=yes wireless=IEEE 802.11 8192EU的芯片默认是rtl8xxxu的驱动, 我就想有没有8192EU的驱动, 我安装试下 于是上 AUR 搜了搜, 果然有 -&gt; 8192eu-dkms 于是下载了安装, 再把原来的拉黑/etc/modprobe.d/rtl8xxxu_blacklist.conf 1blacklist rtl8xxxu 当然还要装对应的headers 重启后, 再看下驱动 1configuration: broadcast=yes driver=rtl8192eu multicast=yes wireless=unassociated 驱动成功, 信号满格, 输入密码秒连, 并且原来的iw list只支持 123Supported interface modes:* managed* monitor 现在连AP都支持了 1234567Supported interface modes:* IBSS* managed* AP* monitor* P2P-client* P2P-GO","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Manjaro","slug":"Manjaro","permalink":"https://linweiyuan.github.io/tags/Manjaro/"},{"name":"RTL8192EU","slug":"RTL8192EU","permalink":"https://linweiyuan.github.io/tags/RTL8192EU/"}]},{"title":"Git status中文显示数字解决","slug":"Git-status中文显示数字解决","date":"2018-02-26T12:46:54.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/02/26/Git-status中文显示数字解决.html","link":"","permalink":"https://linweiyuan.github.io/2018/02/26/Git-status%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E6%95%B0%E5%AD%97%E8%A7%A3%E5%86%B3.html","excerpt":"","text":"1git config --global core.quotepath false","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"}]},{"title":"Arch Linux /tmp分区容量不足解决","slug":"Arch-Linux-tmp分区容量不足解决","date":"2018-02-26T12:29:55.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2018/02/26/Arch-Linux-tmp分区容量不足解决.html","link":"","permalink":"https://linweiyuan.github.io/2018/02/26/Arch-Linux-tmp%E5%88%86%E5%8C%BA%E5%AE%B9%E9%87%8F%E4%B8%8D%E8%B6%B3%E8%A7%A3%E5%86%B3.html","excerpt":"","text":"yaourt 安装Oracle-XE, 解压的时候报错, /tmp空间不足 参考查 wiki -&gt; tmpfs得知默认会把&#x2F;tmp 分成内存的一半, 我 512M 的内存, 所以分了 243M 原话是 12By default, a tmpfs partition has its maximum size set to half of the availableRAM, however it is possible to overrule this value. 解决方案是 123To explicitly set a maximum size, in this example to override the default /tmpmount, use the size mount option: /etc/fstab tmpfs /tmp tmpfsrw,nodev,nosuid,size=2G 0 0 改完保存重启再安装一切正常","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"},{"name":"Oracle-XE","slug":"Oracle-XE","permalink":"https://linweiyuan.github.io/tags/Oracle-XE/"}]},{"title":"Java多级菜单递归拼装Demo","slug":"Java多级菜单递归拼装Demo","date":"2018-02-08T14:26:38.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/02/08/Java多级菜单递归拼装Demo.html","link":"","permalink":"https://linweiyuan.github.io/2018/02/08/Java%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%E9%80%92%E5%BD%92%E6%8B%BC%E8%A3%85Demo.html","excerpt":"","text":"JEECG的改造 Demo 1234567891011121314151617181920212223242526272829303132333435363738394041@Overridepublic List&lt;TSFunction&gt; getFunctionByRoleId(String roleId) &#123; List&lt;TSFunction&gt; functionList = new ArrayList&lt;&gt;(); // 查询全部菜单 List&lt;TSFunction&gt; functionList0 = tSFunctionMapper.selectAll(); // 角色权限相关菜单 List&lt;TSFunction&gt; roleFunctionList = tSRoleMapper.getFunctionByRoleId(roleId); for (TSFunction function0 : functionList0) &#123; function0.setChildren(makeFunctionList(functionList0, function0.getId(), roleFunctionList)); // 只添加一级菜单（下级菜单已拼装好在里面） if (StringUtil.isEmpty(function0.getParentfunctionid())) &#123; functionList.add(function0); &#125; &#125; return functionList;&#125;public List&lt;TSFunction&gt; makeFunctionList(List&lt;TSFunction&gt; srcFunctionList, String functionId, List&lt;TSFunction&gt; roleFunctionList) &#123; List&lt;TSFunction&gt; functionList = new ArrayList&lt;&gt;(); for (TSFunction function : srcFunctionList) &#123; String id = function.getId(); String parentfunctionid = function.getParentfunctionid(); // 非一级菜单递归查询 if (StringUtil.isNotEmpty(parentfunctionid)) &#123; if (parentfunctionid.equals(functionId)) &#123; function.setChildren(makeFunctionList(srcFunctionList, id, roleFunctionList)); functionList.add(function); &#125; &#125; // 角色权限√处理 for (TSFunction roleFunction : roleFunctionList) &#123; if (id.equals(roleFunction.getId())) &#123; function.setChecked(1); &#125; &#125; &#125; return functionList;&#125; 部分返回结果 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129&#123; &quot;id&quot;: &quot;402889fb486e848101486e8de3d60005&quot;, &quot;functionlevel&quot;: 0, &quot;functionname&quot;: &quot;数据权限&quot;, &quot;functionorder&quot;: &quot;100&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180820003&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [ &#123; &quot;id&quot;: &quot;402880f25a980e2a015a981dc8de0005&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;请假自定义表单&quot;, &quot;functionorder&quot;: &quot;3&quot;, &quot;functionurl&quot;: &quot;autoFormController/af/employee_leave_form/goViewPage.do&quot;, &quot;parentfunctionid&quot;: &quot;402889fb486e848101486e8de3d60005&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125;, &#123; &quot;id&quot;: &quot;402880f25a9833f5015a9843218f000c&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;自定义表单查看&quot;, &quot;functionorder&quot;: &quot;4&quot;, &quot;functionurl&quot;: &quot;autoFormController/af/order_form/goUpdatePage.do&quot;, &quot;parentfunctionid&quot;: &quot;402889fb486e848101486e8de3d60005&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125;, &#123; &quot;id&quot;: &quot;402881855ab8c48a015ab8d133050018&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;测试online表单权限&quot;, &quot;functionorder&quot;: &quot;4&quot;, &quot;parentfunctionid&quot;: &quot;402889fb486e848101486e8de3d60005&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [ &#123; &quot;id&quot;: &quot;402880f25b1d5a3a015b1d772c2b0013&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;请假单编辑页面&quot;, &quot;functionorder&quot;: &quot;2&quot;, &quot;functionurl&quot;: &quot;cgFormBuildController/ftlForm/jform_leave/goUpdate.do&quot;, &quot;parentfunctionid&quot;: &quot;402881855ab8c48a015ab8d133050018&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125;, &#123; &quot;id&quot;: &quot;402880f25b1e2ac7015b1e5cdc340010&quot;, &quot;functionlevel&quot;: 2, &quot;functionname&quot;: &quot;online请假加载数据请求&quot;, &quot;functionorder&quot;: &quot;3&quot;, &quot;functionurl&quot;: &quot;cgAutoListController.do?datagrid&amp;configId=jform_leave&quot;, &quot;parentfunctionid&quot;: &quot;402881855ab8c48a015ab8d133050018&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125;, &#123; &quot;id&quot;: &quot;402880f25b23a635015b23a992f10003&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;ol订单编辑页面&quot;, &quot;functionorder&quot;: &quot;4&quot;, &quot;functionurl&quot;: &quot;cgFormBuildController/ftlForm/jform_order_main/goUpdate.do&quot;, &quot;parentfunctionid&quot;: &quot;402881855ab8c48a015ab8d133050018&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125;, &#123; &quot;id&quot;: &quot;402881855ab8c48a015ab8d1f96f001b&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;ol请假单查看页面&quot;, &quot;functionorder&quot;: &quot;1&quot;, &quot;functionurl&quot;: &quot;cgFormBuildController/ftlForm/jform_leave/goDetail.do&quot;, &quot;parentfunctionid&quot;: &quot;402881855ab8c48a015ab8d133050018&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125; ] &#125;, &#123; &quot;id&quot;: &quot;4028ef81574ae99701574aeb97bd0003&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;用户列表数据权限&quot;, &quot;functionorder&quot;: &quot;2&quot;, &quot;functionurl&quot;: &quot;userController.do?datagrid&quot;, &quot;parentfunctionid&quot;: &quot;402889fb486e848101486e8de3d60005&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180460000&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125;, &#123; &quot;id&quot;: &quot;40288088481d019401481d2fcebf000d&quot;, &quot;functionlevel&quot;: 1, &quot;functionname&quot;: &quot;minidao数据权限列表&quot;, &quot;functionorder&quot;: &quot;1&quot;, &quot;functionurl&quot;: &quot;jeecgListDemoController.do?minidaoDatagrid&quot;, &quot;parentfunctionid&quot;: &quot;402889fb486e848101486e8de3d60005&quot;, &quot;iconid&quot;: &quot;8a8ab0b246dc81120146dc8180820003&quot;, &quot;deskIconid&quot;: &quot;8a8ab0b246dc81120146dc8180dd001e&quot;, &quot;functiontype&quot;: 1, &quot;checked&quot;: 0, &quot;children&quot;: [] &#125; ]&#125;","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://linweiyuan.github.io/tags/Java/"},{"name":"JEECG","slug":"JEECG","permalink":"https://linweiyuan.github.io/tags/JEECG/"}]},{"title":"Oracle菜单类型递归查询Demo","slug":"Oracle菜单类型递归查询Demo","date":"2018-02-08T11:43:15.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/02/08/Oracle菜单类型递归查询Demo.html","link":"","permalink":"https://linweiyuan.github.io/2018/02/08/Oracle%E8%8F%9C%E5%8D%95%E7%B1%BB%E5%9E%8B%E9%80%92%E5%BD%92%E6%9F%A5%E8%AF%A2Demo.html","excerpt":"","text":"12345678910111213141516SELECT level, f.id, f.parentfunctionid, rpad(&#x27; &#x27;, (level - 1) * 5) || f.functionname functionname, f.functionorderFROM t_s_function fSTART WITH f.id = &#x27;402889fb486e848101486e8de3d60005&#x27;CONNECT BY f.parentfunctionid = PRIOR f.idORDER BY level, f.functionorder;","categories":[{"name":"数据库","slug":"数据库","permalink":"https://linweiyuan.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"https://linweiyuan.github.io/tags/Oracle/"},{"name":"SQL","slug":"SQL","permalink":"https://linweiyuan.github.io/tags/SQL/"}]},{"title":"Oracle行转列及去重","slug":"Oracle行转列及去重","date":"2018-02-07T17:23:39.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/02/07/Oracle行转列及去重.html","link":"","permalink":"https://linweiyuan.github.io/2018/02/07/Oracle%E8%A1%8C%E8%BD%AC%E5%88%97%E5%8F%8A%E5%8E%BB%E9%87%8D.html","excerpt":"","text":"在旧版本中, 可以使用wm_concat(), 并且自动去重 新版本 Oracle 默认屏蔽了wm_concat()函数, 可以用listagg() 但是, 有个缺点就是数据会重复, 所以要加个正则 1regexp_replace(?, &#x27;([^,]+)(,\\1)+&#x27;,&#x27;\\1&#x27;)","categories":[{"name":"数据库","slug":"数据库","permalink":"https://linweiyuan.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"https://linweiyuan.github.io/tags/Oracle/"},{"name":"SQL","slug":"SQL","permalink":"https://linweiyuan.github.io/tags/SQL/"}]},{"title":"Maven的Oracle的JDBC驱动","slug":"Maven的Oracle的JDBC驱动","date":"2018-02-07T01:11:58.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/02/07/Maven的Oracle的JDBC驱动.html","link":"","permalink":"https://linweiyuan.github.io/2018/02/07/Maven%E7%9A%84Oracle%E7%9A%84JDBC%E9%A9%B1%E5%8A%A8.html","excerpt":"","text":"官网下载 JDBC 驱动, 配置 Maven 1mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.5.0 -Dpackaging=jar -Dfile=ojdbc14.jar","categories":[{"name":"构建工具","slug":"构建工具","permalink":"https://linweiyuan.github.io/categories/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://linweiyuan.github.io/tags/Java/"},{"name":"Maven","slug":"Maven","permalink":"https://linweiyuan.github.io/tags/Maven/"},{"name":"Oracle","slug":"Oracle","permalink":"https://linweiyuan.github.io/tags/Oracle/"}]},{"title":"Git保存密码","slug":"Git保存密码","date":"2018-02-05T23:11:58.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2018/02/05/Git保存密码.html","link":"","permalink":"https://linweiyuan.github.io/2018/02/05/Git%E4%BF%9D%E5%AD%98%E5%AF%86%E7%A0%81.html","excerpt":"","text":"1git config --global credential.helper store","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"}]},{"title":"某站XSS漏洞","slug":"某站XSS漏洞-2","date":"2018-01-01T14:15:29.000Z","updated":"2022-09-23T15:32:42.156Z","comments":true,"path":"2018/01/01/某站XSS漏洞-2.html","link":"","permalink":"https://linweiyuan.github.io/2018/01/01/%E6%9F%90%E7%AB%99XSS%E6%BC%8F%E6%B4%9E-2.html","excerpt":"","text":"弹窗","categories":[{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"XSS","slug":"XSS","permalink":"https://linweiyuan.github.io/tags/XSS/"}]},{"title":"Uploadify插件报queueData错","slug":"Uploadify插件报queueData错","date":"2017-12-20T14:41:09.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/12/20/Uploadify插件报queueData错.html","link":"","permalink":"https://linweiyuan.github.io/2017/12/20/Uploadify%E6%8F%92%E4%BB%B6%E6%8A%A5queueData%E9%94%99.html","excerpt":"","text":"利用这个插件上传文件时, 遇到了一个问题, 提示Cannot read property &#39;queueData&#39; of undefined 打开Chrome设置, 允许Flash, 即可","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"jQuery","slug":"jQuery","permalink":"https://linweiyuan.github.io/tags/jQuery/"}]},{"title":"Linux删除指定扩展名文件","slug":"Linux删除指定扩展名文件","date":"2017-12-08T12:53:35.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/12/08/Linux删除指定扩展名文件.html","link":"","permalink":"https://linweiyuan.github.io/2017/12/08/Linux%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E6%89%A9%E5%B1%95%E5%90%8D%E6%96%87%E4%BB%B6.html","excerpt":"","text":"maven 下载 jar 的时候, 经常会半途断开连接导致报错, 再次更新就会提示 cache 的问题, 并且不会一次提示全部, 删一个提示下一个, 于是找到了一种一次性删除所有不合法 jar 的方法 1find repository/ -name &#x27;*.lastUpdated&#x27; -exec rm -rf &#123;&#125; \\; 重新下载没下载完的","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"}]},{"title":"Git push 提示HTTP 400","slug":"Git-push-提示HTTP-400","date":"2017-11-25T20:57:44.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/11/25/Git-push-提示HTTP-400.html","link":"","permalink":"https://linweiyuan.github.io/2017/11/25/Git-push-%E6%8F%90%E7%A4%BAHTTP-400.html","excerpt":"","text":"12error: RPC failed; HTTP 400 curl 22 The requested URL returned error: 400 Failed reading client bodyfatal: The remote end hung up unexpectedly HTTP 413, 调 nginx 配置 HTTP 400, 设置下 git 的缓冲区大小, 比如 100M 1git config --global http.postBuffer 104857600","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"}]},{"title":"CentOS Minimal网络配置","slug":"CentOS-Minimal网络配置","date":"2017-11-25T12:38:06.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/11/25/CentOS-Minimal网络配置.html","link":"","permalink":"https://linweiyuan.github.io/2017/11/25/CentOS-Minimal%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.html","excerpt":"","text":"如果 CentOS Minimal 安装时没启动网络, 装完后需再设置才能联网 编辑/etc/sysconfig/network-script/ifcfg-xxx文件, 设置 1ONBOOT=yes 重启网络 1sudo systemctl restart network","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://linweiyuan.github.io/tags/CentOS/"}]},{"title":"Docker镜像加速","slug":"Docker镜像加速","date":"2017-11-24T23:43:38.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/11/24/Docker镜像加速.html","link":"","permalink":"https://linweiyuan.github.io/2017/11/24/Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F.html","excerpt":"","text":"为了永久生效, 可以通过配置文件的方式进行配置, 参考 -&gt; Docker 中国官方镜像加速 修改/etc/docker/daemon.json文件（文件夹没有的就创建）, 加入以下内容 123&#123; &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]&#125; 重启 Docker 不一定生效, 最好重启系统","categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"}]},{"title":"CentOS安装Node.js","slug":"CentOS安装Node-js","date":"2017-10-08T14:18:00.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/10/08/CentOS安装Node-js.html","link":"","permalink":"https://linweiyuan.github.io/2017/10/08/CentOS%E5%AE%89%E8%A3%85Node-js.html","excerpt":"","text":"选择要安装的版本, 联网执行脚本 Node.js v6 LTS 1curl --silent --location https://rpm.nodesource.com/setup_6.x | sudo bash - Node.js 8 1curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash - 安装 1sudo yum -y install nodejs","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://linweiyuan.github.io/tags/CentOS/"},{"name":"Node.js","slug":"Node-js","permalink":"https://linweiyuan.github.io/tags/Node-js/"}]},{"title":"CentOS安装Nginx","slug":"CentOS安装Nginx","date":"2017-10-08T14:17:39.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/10/08/CentOS安装Nginx.html","link":"","permalink":"https://linweiyuan.github.io/2017/10/08/CentOS%E5%AE%89%E8%A3%85Nginx.html","excerpt":"","text":"添加源, 新建/etc/yum.repos.d/nginx.repo 12345[nginx]name=nginx repobaseurl=http://nginx.org/packages/centos/$releasever/$basearch/gpgcheck=0enabled=1 更新库 1sudo yum update 安装 1sudo yum -y install nginx","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://linweiyuan.github.io/tags/CentOS/"},{"name":"Nginx","slug":"Nginx","permalink":"https://linweiyuan.github.io/tags/Nginx/"}]},{"title":"Arch Linux查询滚动次数","slug":"Arch-Linux查询滚动次数","date":"2017-09-24T18:29:52.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/09/24/Arch-Linux查询滚动次数.html","link":"","permalink":"https://linweiyuan.github.io/2017/09/24/Arch-Linux%E6%9F%A5%E8%AF%A2%E6%BB%9A%E5%8A%A8%E6%AC%A1%E6%95%B0.html","excerpt":"","text":"1echo $(head -n1 /var/log/pacman.log | cut -d &quot; &quot; -f 1,2) 以来一共滚了 $(grep -c &quot;full system upgrade&quot; /var/log/pacman.log) 次","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"}]},{"title":"Linux终端环境下下载JDK","slug":"Linux终端环境下下载JDK","date":"2017-09-24T12:26:25.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/09/24/Linux终端环境下下载JDK.html","link":"","permalink":"https://linweiyuan.github.io/2017/09/24/Linux%E7%BB%88%E7%AB%AF%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%B8%8B%E8%BD%BDJDK.html","excerpt":"","text":"Accept License Agreement效果 1wget --no-check-certificate --no-cookies --header &quot;Cookie: oraclelicense=accept-securebackup-cookie&quot; http://download.oracle.com/otn-pub/java/jdk/9+181/jdk-9_linux-x64_bin.tar.gz","categories":[{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"JDK","slug":"JDK","permalink":"https://linweiyuan.github.io/tags/JDK/"}]},{"title":"Linux VPS性能测试","slug":"Linux-VPS性能测试","date":"2017-09-24T10:47:15.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/09/24/Linux-VPS性能测试.html","link":"","permalink":"https://linweiyuan.github.io/2017/09/24/Linux-VPS%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95.html","excerpt":"","text":"1wget -qO- bench.sh | bash","categories":[{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"}]},{"title":"Git设置Socks5代理","slug":"Git设置Socks5代理","date":"2017-09-07T21:52:48.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/09/07/Git设置Socks5代理.html","link":"","permalink":"https://linweiyuan.github.io/2017/09/07/Git%E8%AE%BE%E7%BD%AESocks5%E4%BB%A3%E7%90%86.html","excerpt":"","text":"12git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27;git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27;","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"}]},{"title":"Android版本API内核相关","slug":"Android版本API内核相关","date":"2017-09-01T14:57:52.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/09/01/Android版本API内核相关.html","link":"","permalink":"https://linweiyuan.github.io/2017/09/01/Android%E7%89%88%E6%9C%ACAPI%E5%86%85%E6%A0%B8%E7%9B%B8%E5%85%B3.html","excerpt":"","text":"Android Version Code Name API Level Linux Kernel 1.0 ? 1 ? 1.1 ? 2 ? 1.5 Cupcake 3 2.6.27 1.6 Donut 4 2.6.29 2.0 Eclair 5 2.6.29 2.0.1 Eclair 6 2.6.29 2.1 Eclair 7 2.6.29 2.2 Fyoro 8 2.6.32 2.3 Gingerbread 9 2.6.35 2.3.3 Gingerbread 10 2.6.35 3.0 Honeycomb 11 2.6.36 3.1 Honeycomb 12 2.6.36 3.2 Honeycomb 13 2.6.36 4.0 Ice Cream Sandwich 14 3.0.1 4.0.3 Ice Cream Sandwich 15 3.0.1 4.1 Jelly Bean 16 3.0.31 4.2 Jelly Bean 17 3.4.0 4.3 Jelly Bean 18 3.4.39 4.4 KitKat 19 3.10 4.4W KitKat 20 3.10 5.0 Lollipop 21 3.16.1 5.1 Lollipop 22 3.16.1 6.0 Marshmallow 23 3.18.10 7.0 Nougat 24 4.4.1 7.1 Nougat 25 4.4.1 8.0 Oreo 26 4.10 8.1 Oreo 27 4.10 9 Pie 28 4.4.107、4.9.84、4.14.42","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://linweiyuan.github.io/tags/Android/"}]},{"title":"Android防止输入法弹出来导致标题栏被顶上去","slug":"Android防止输入法弹出来导致标题栏被顶上去","date":"2017-08-27T22:08:59.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/08/27/Android防止输入法弹出来导致标题栏被顶上去.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/27/Android%E9%98%B2%E6%AD%A2%E8%BE%93%E5%85%A5%E6%B3%95%E5%BC%B9%E5%87%BA%E6%9D%A5%E5%AF%BC%E8%87%B4%E6%A0%87%E9%A2%98%E6%A0%8F%E8%A2%AB%E9%A1%B6%E4%B8%8A%E5%8E%BB.html","excerpt":"","text":"1android:windowSoftInputMode=&quot;adjustResize|stateHidden&quot;","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://linweiyuan.github.io/tags/Android/"}]},{"title":"AngularJS显示图片需要注意的地方","slug":"AngularJS显示图片需要注意的地方","date":"2017-08-24T14:32:43.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/08/24/AngularJS显示图片需要注意的地方.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/24/AngularJS%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9.html","excerpt":"","text":"AngularJS显示图片的时候, 不要直接用src, 官方原话是这样的 1234Using AngularJS markup like &#123;&#123;hash&#125;&#125; in a src attribute doesn&#x27;t work right: Thebrowser will fetch from the URL with the literal text &#123;&#123;hash&#125;&#125; until AngularJSreplaces the expression inside &#123;&#123;hash&#125;&#125;. The ngSrc directive solves thisproblem. 如果直接用src的话, AngularJS在根据src显示图片之前会先请求一次src里面的纯字符串内容, 比如我写 1&lt;img src=&quot;&#123;&#123;pic.url&#125;&#125;&quot; /&gt; 刷新页面会发现一个奇怪的网络请求, 虽然图片还是能正常显示 1http://127.0.0.1:8080/%7B%7Bpic.url%7D%7D 其实就是 1http://127.0.0.1:8080/&#123;&#123;pic.url&#125;&#125; 而用 1&lt;img ng-src=&quot;&#123;&#123;pic.url&#125;&#125;&quot; /&gt; 则不会有这问题","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"AngularJS","slug":"AngularJS","permalink":"https://linweiyuan.github.io/tags/AngularJS/"}]},{"title":"Git执行add操作时提示'warning: CRLF will be replaced by LF...'","slug":"Git执行add操作时提示-warning-CRLF-will-be-replaced-by-LF","date":"2017-08-22T22:26:35.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/08/22/Git执行add操作时提示-warning-CRLF-will-be-replaced-by-LF.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/22/Git%E6%89%A7%E8%A1%8Cadd%E6%93%8D%E4%BD%9C%E6%97%B6%E6%8F%90%E7%A4%BA-warning-CRLF-will-be-replaced-by-LF.html","excerpt":"","text":"1git config --global core.autocrlf true","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"}]},{"title":"Arch Linux开启BBR(重启不失效)","slug":"Arch-Linux开启BBR-重启不失效","date":"2017-08-22T15:10:20.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/08/22/Arch-Linux开启BBR-重启不失效.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/22/Arch-Linux%E5%BC%80%E5%90%AFBBR-%E9%87%8D%E5%90%AF%E4%B8%8D%E5%A4%B1%E6%95%88.html","excerpt":"","text":"编辑配置文件/etc/sysctl.d/99-bbr.conf 12net.core.default_qdisc=fqnet.ipv4.tcp_congestion_control=bbr 重启 检查 1lsmod | grep tcp_bbr","categories":[{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"}]},{"title":"AngularJS的ng-include要注意的地方","slug":"AngularJS的ng-include要注意的地方","date":"2017-08-16T15:38:44.000Z","updated":"2022-09-23T15:32:42.148Z","comments":true,"path":"2017/08/16/AngularJS的ng-include要注意的地方.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/16/AngularJS%E7%9A%84ng-include%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9.html","excerpt":"","text":"官方文档 -&gt; ngInclude, 明确写着一句话 12AngularJS expression evaluating to URL. If the source is a string constant, makesure you wrap it in single quotes, e.g. src=&quot;&#x27;myPartialTemplate.html&#x27;&quot;. 双引号里面的单引号不能少","categories":[{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"AngularJS","slug":"AngularJS","permalink":"https://linweiyuan.github.io/tags/AngularJS/"}]},{"title":"Nginx上传文件报错'413 Request Entity Too Large'","slug":"Nginx上传文件报错-413-Request-Entity-Too-Large","date":"2017-08-13T14:03:34.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/08/13/Nginx上传文件报错-413-Request-Entity-Too-Large.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/13/Nginx%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99-413-Request-Entity-Too-Large.html","excerpt":"","text":"1error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413 Request Entity Too Large 修改 nginx.conf 配置, 比如 100M 1client_max_body_size 100m; 重启 Nginx","categories":[{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://linweiyuan.github.io/tags/Nginx/"}]},{"title":"Redis配置密码认证","slug":"Redis配置密码认证","date":"2017-08-11T13:59:46.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/08/11/Redis配置密码认证.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/11/Redis%E9%85%8D%E7%BD%AE%E5%AF%86%E7%A0%81%E8%AE%A4%E8%AF%81.html","excerpt":"","text":"Redis 默认连接是空密码, 如果要配置密码认证, 只需修改配置文件 1requirepass 密码 重启服务即可生效 此时, 如果单纯redis-cli登录, 会发现执行命令会提示需要认证 1234[root@archlinux ~]# redis-cli127.0.0.1:6379&gt; KEYS *(error) NOAUTH Authentication required.127.0.0.1:6379&gt; 截取help片段 12345[root@archlinux ~]# redis-cli --helpredis-cli 4.0.1Usage: redis-cli [OPTIONS] [cmd [arg [arg ...]]] -a &lt;password&gt; Password to use when connecting to the server. 加入-a参数后不再提示错误 1234[root@archlinux ~]# redis-cli -a ?127.0.0.1:6379&gt; KEYS *(empty list or set)127.0.0.1:6379&gt;","categories":[{"name":"数据库","slug":"数据库","permalink":"https://linweiyuan.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"Redis","slug":"Redis","permalink":"https://linweiyuan.github.io/tags/Redis/"}]},{"title":"Redis配置远程连接","slug":"Redis配置远程连接","date":"2017-08-10T17:58:06.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/08/10/Redis配置远程连接.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/10/Redis%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5.html","excerpt":"","text":"注释bind 1# bind 127.0.0.1 关掉保护模式 1protected-mode no 重启 Redis","categories":[{"name":"数据库","slug":"数据库","permalink":"https://linweiyuan.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"Redis","slug":"Redis","permalink":"https://linweiyuan.github.io/tags/Redis/"}]},{"title":"Git批量修改提交者信息","slug":"Git批量修改提交者信息","date":"2017-08-10T06:14:20.000Z","updated":"2022-09-23T15:32:42.152Z","comments":true,"path":"2017/08/10/Git批量修改提交者信息.html","link":"","permalink":"https://linweiyuan.github.io/2017/08/10/Git%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4%E8%80%85%E4%BF%A1%E6%81%AF.html","excerpt":"","text":"官方方法 -&gt; changing-author-info 克隆仓库bare 1git clone git仓库地址 --bare 更改提交者信息 -&gt; OLD_EMAIL,CORRECT_NAME,CORRECT_EMAIL 1234567891011121314151617#!/bin/shgit filter-branch --env-filter &#x27;OLD_EMAIL=&quot;your-old-email@example.com&quot;CORRECT_NAME=&quot;Your Correct Name&quot;CORRECT_EMAIL=&quot;your-correct-email@example.com&quot;if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]then export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot; export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;fiif [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]then export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot; export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;fi&#x27; --tag-name-filter cat -- --branches --tags 1git push --force --tags origin &#x27;refs/heads/*&#x27;","categories":[{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"}]}],"categories":[{"name":"容器技术","slug":"容器技术","permalink":"https://linweiyuan.github.io/categories/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/"},{"name":"程序设计","slug":"程序设计","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"},{"name":"网络安全","slug":"网络安全","permalink":"https://linweiyuan.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"虚拟机","slug":"虚拟机","permalink":"https://linweiyuan.github.io/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"数据库","slug":"数据库","permalink":"https://linweiyuan.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"操作系统","slug":"操作系统","permalink":"https://linweiyuan.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"后端","slug":"程序设计/后端","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E5%90%8E%E7%AB%AF/"},{"name":"Java","slug":"程序设计/后端/Java","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E5%90%8E%E7%AB%AF/Java/"},{"name":"Javassist","slug":"程序设计/后端/Java/Javassist","permalink":"https://linweiyuan.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/%E5%90%8E%E7%AB%AF/Java/Javassist/"},{"name":"构建工具","slug":"构建工具","permalink":"https://linweiyuan.github.io/categories/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"},{"name":"实用技巧","slug":"实用技巧","permalink":"https://linweiyuan.github.io/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"},{"name":"服务器","slug":"服务器","permalink":"https://linweiyuan.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"版本控制","slug":"版本控制","permalink":"https://linweiyuan.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://linweiyuan.github.io/tags/Docker/"},{"name":"Kotlin","slug":"Kotlin","permalink":"https://linweiyuan.github.io/tags/Kotlin/"},{"name":"WeChatPay","slug":"WeChatPay","permalink":"https://linweiyuan.github.io/tags/WeChatPay/"},{"name":"Windows","slug":"Windows","permalink":"https://linweiyuan.github.io/tags/Windows/"},{"name":"Vulnerability","slug":"Vulnerability","permalink":"https://linweiyuan.github.io/tags/Vulnerability/"},{"name":"JSPX","slug":"JSPX","permalink":"https://linweiyuan.github.io/tags/JSPX/"},{"name":"Anko","slug":"Anko","permalink":"https://linweiyuan.github.io/tags/Anko/"},{"name":"XSS","slug":"XSS","permalink":"https://linweiyuan.github.io/tags/XSS/"},{"name":"Python","slug":"Python","permalink":"https://linweiyuan.github.io/tags/Python/"},{"name":"pip","slug":"pip","permalink":"https://linweiyuan.github.io/tags/pip/"},{"name":"VirtualBox","slug":"VirtualBox","permalink":"https://linweiyuan.github.io/tags/VirtualBox/"},{"name":"Android","slug":"Android","permalink":"https://linweiyuan.github.io/tags/Android/"},{"name":"MySQL","slug":"MySQL","permalink":"https://linweiyuan.github.io/tags/MySQL/"},{"name":"Arch Linux","slug":"Arch-Linux","permalink":"https://linweiyuan.github.io/tags/Arch-Linux/"},{"name":"i3","slug":"i3","permalink":"https://linweiyuan.github.io/tags/i3/"},{"name":"i3status","slug":"i3status","permalink":"https://linweiyuan.github.io/tags/i3status/"},{"name":"Linux","slug":"Linux","permalink":"https://linweiyuan.github.io/tags/Linux/"},{"name":"NTFS","slug":"NTFS","permalink":"https://linweiyuan.github.io/tags/NTFS/"},{"name":"Unauthorized","slug":"Unauthorized","permalink":"https://linweiyuan.github.io/tags/Unauthorized/"},{"name":"Java","slug":"Java","permalink":"https://linweiyuan.github.io/tags/Java/"},{"name":"Javassist","slug":"Javassist","permalink":"https://linweiyuan.github.io/tags/Javassist/"},{"name":"Reflection","slug":"Reflection","permalink":"https://linweiyuan.github.io/tags/Reflection/"},{"name":"Maven","slug":"Maven","permalink":"https://linweiyuan.github.io/tags/Maven/"},{"name":"Nexus","slug":"Nexus","permalink":"https://linweiyuan.github.io/tags/Nexus/"},{"name":"ThreadPool","slug":"ThreadPool","permalink":"https://linweiyuan.github.io/tags/ThreadPool/"},{"name":"Flask","slug":"Flask","permalink":"https://linweiyuan.github.io/tags/Flask/"},{"name":"Dockerfile","slug":"Dockerfile","permalink":"https://linweiyuan.github.io/tags/Dockerfile/"},{"name":"Go","slug":"Go","permalink":"https://linweiyuan.github.io/tags/Go/"},{"name":"openssl","slug":"openssl","permalink":"https://linweiyuan.github.io/tags/openssl/"},{"name":"Nginx","slug":"Nginx","permalink":"https://linweiyuan.github.io/tags/Nginx/"},{"name":"Server Send Event","slug":"Server-Send-Event","permalink":"https://linweiyuan.github.io/tags/Server-Send-Event/"},{"name":"Registry","slug":"Registry","permalink":"https://linweiyuan.github.io/tags/Registry/"},{"name":"WebSocket","slug":"WebSocket","permalink":"https://linweiyuan.github.io/tags/WebSocket/"},{"name":"Privoxy","slug":"Privoxy","permalink":"https://linweiyuan.github.io/tags/Privoxy/"},{"name":"ASPX","slug":"ASPX","permalink":"https://linweiyuan.github.io/tags/ASPX/"},{"name":"AVD","slug":"AVD","permalink":"https://linweiyuan.github.io/tags/AVD/"},{"name":"FFmpeg","slug":"FFmpeg","permalink":"https://linweiyuan.github.io/tags/FFmpeg/"},{"name":"youtube-dl","slug":"youtube-dl","permalink":"https://linweiyuan.github.io/tags/youtube-dl/"},{"name":"Nextcloud","slug":"Nextcloud","permalink":"https://linweiyuan.github.io/tags/Nextcloud/"},{"name":"JSP","slug":"JSP","permalink":"https://linweiyuan.github.io/tags/JSP/"},{"name":"CoreOS","slug":"CoreOS","permalink":"https://linweiyuan.github.io/tags/CoreOS/"},{"name":"cURL","slug":"cURL","permalink":"https://linweiyuan.github.io/tags/cURL/"},{"name":"Wget","slug":"Wget","permalink":"https://linweiyuan.github.io/tags/Wget/"},{"name":"Google Drive","slug":"Google-Drive","permalink":"https://linweiyuan.github.io/tags/Google-Drive/"},{"name":"IDEA","slug":"IDEA","permalink":"https://linweiyuan.github.io/tags/IDEA/"},{"name":"Spring Cloud","slug":"Spring-Cloud","permalink":"https://linweiyuan.github.io/tags/Spring-Cloud/"},{"name":"Zuul","slug":"Zuul","permalink":"https://linweiyuan.github.io/tags/Zuul/"},{"name":"Spring Boot","slug":"Spring-Boot","permalink":"https://linweiyuan.github.io/tags/Spring-Boot/"},{"name":"Docker Compose","slug":"Docker-Compose","permalink":"https://linweiyuan.github.io/tags/Docker-Compose/"},{"name":"RabbitMQ","slug":"RabbitMQ","permalink":"https://linweiyuan.github.io/tags/RabbitMQ/"},{"name":"Feign","slug":"Feign","permalink":"https://linweiyuan.github.io/tags/Feign/"},{"name":"Hystrix","slug":"Hystrix","permalink":"https://linweiyuan.github.io/tags/Hystrix/"},{"name":"deepin-wechat","slug":"deepin-wechat","permalink":"https://linweiyuan.github.io/tags/deepin-wechat/"},{"name":"Shell","slug":"Shell","permalink":"https://linweiyuan.github.io/tags/Shell/"},{"name":"jsoup","slug":"jsoup","permalink":"https://linweiyuan.github.io/tags/jsoup/"},{"name":"Redis","slug":"Redis","permalink":"https://linweiyuan.github.io/tags/Redis/"},{"name":"CentOS","slug":"CentOS","permalink":"https://linweiyuan.github.io/tags/CentOS/"},{"name":"Fcitx","slug":"Fcitx","permalink":"https://linweiyuan.github.io/tags/Fcitx/"},{"name":"Jenkins","slug":"Jenkins","permalink":"https://linweiyuan.github.io/tags/Jenkins/"},{"name":"war","slug":"war","permalink":"https://linweiyuan.github.io/tags/war/"},{"name":"GitLab","slug":"GitLab","permalink":"https://linweiyuan.github.io/tags/GitLab/"},{"name":"Socket","slug":"Socket","permalink":"https://linweiyuan.github.io/tags/Socket/"},{"name":"UDP","slug":"UDP","permalink":"https://linweiyuan.github.io/tags/UDP/"},{"name":"Swing","slug":"Swing","permalink":"https://linweiyuan.github.io/tags/Swing/"},{"name":"WebLogic","slug":"WebLogic","permalink":"https://linweiyuan.github.io/tags/WebLogic/"},{"name":"Ant","slug":"Ant","permalink":"https://linweiyuan.github.io/tags/Ant/"},{"name":"Tomcat","slug":"Tomcat","permalink":"https://linweiyuan.github.io/tags/Tomcat/"},{"name":"KDE","slug":"KDE","permalink":"https://linweiyuan.github.io/tags/KDE/"},{"name":"TigerVNC","slug":"TigerVNC","permalink":"https://linweiyuan.github.io/tags/TigerVNC/"},{"name":"Git","slug":"Git","permalink":"https://linweiyuan.github.io/tags/Git/"},{"name":"Manjaro","slug":"Manjaro","permalink":"https://linweiyuan.github.io/tags/Manjaro/"},{"name":"RTL8192EU","slug":"RTL8192EU","permalink":"https://linweiyuan.github.io/tags/RTL8192EU/"},{"name":"Oracle-XE","slug":"Oracle-XE","permalink":"https://linweiyuan.github.io/tags/Oracle-XE/"},{"name":"JEECG","slug":"JEECG","permalink":"https://linweiyuan.github.io/tags/JEECG/"},{"name":"Oracle","slug":"Oracle","permalink":"https://linweiyuan.github.io/tags/Oracle/"},{"name":"SQL","slug":"SQL","permalink":"https://linweiyuan.github.io/tags/SQL/"},{"name":"jQuery","slug":"jQuery","permalink":"https://linweiyuan.github.io/tags/jQuery/"},{"name":"Node.js","slug":"Node-js","permalink":"https://linweiyuan.github.io/tags/Node-js/"},{"name":"JDK","slug":"JDK","permalink":"https://linweiyuan.github.io/tags/JDK/"},{"name":"AngularJS","slug":"AngularJS","permalink":"https://linweiyuan.github.io/tags/AngularJS/"}]}